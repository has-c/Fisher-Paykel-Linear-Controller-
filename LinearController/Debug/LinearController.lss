
LinearController.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000001c  00800100  00000a44  00000ad8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000a44  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000008  0080011c  0080011c  00000af4  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000af4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000b50  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000128  00000000  00000000  00000b90  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002318  00000000  00000000  00000cb8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a8f  00000000  00000000  00002fd0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000dc7  00000000  00000000  00003a5f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000031c  00000000  00000000  00004828  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000007d0  00000000  00000000  00004b44  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000aa1  00000000  00000000  00005314  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000e8  00000000  00000000  00005db5  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__vector_11>
  30:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__vector_12>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 c3 00 	jmp	0x186	; 0x186 <__vector_18>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e4 e4       	ldi	r30, 0x44	; 68
  7c:	fa e0       	ldi	r31, 0x0A	; 10
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	ac 31       	cpi	r26, 0x1C	; 28
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	ac e1       	ldi	r26, 0x1C	; 28
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a4 32       	cpi	r26, 0x24	; 36
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 b1 01 	call	0x362	; 0x362 <main>
  9e:	0c 94 20 05 	jmp	0xa40	; 0xa40 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <ADC_Init>:
  
#include "adc.h"

void ADC_Init(){
	// selection channel is set to AREF
	ADMUX &= ~(1<<REFS1);
  a6:	ec e7       	ldi	r30, 0x7C	; 124
  a8:	f0 e0       	ldi	r31, 0x00	; 0
  aa:	80 81       	ld	r24, Z
  ac:	8f 77       	andi	r24, 0x7F	; 127
  ae:	80 83       	st	Z, r24
	ADMUX &= ~(1<<REFS0);
  b0:	80 81       	ld	r24, Z
  b2:	8f 7b       	andi	r24, 0xBF	; 191
  b4:	80 83       	st	Z, r24
	
	//Selects ADC5 as the analog channel selection
	ADMUX &= ~(1<<MUX3)|(1<<MUX2)|(1<<MUX0);
  b6:	80 81       	ld	r24, Z
  b8:	87 7f       	andi	r24, 0xF7	; 247
  ba:	80 83       	st	Z, r24
	ADMUX |= (1<<MUX1);
  bc:	80 81       	ld	r24, Z
  be:	82 60       	ori	r24, 0x02	; 2
  c0:	80 83       	st	Z, r24
	
	//set required Prescaler Select Bits
	//Turns on the ADC and sets prescaler to 64
	//enable ADC
	ADCSRA |= (1<<ADEN)|(1<<ADPS2)|(1<<ADPS1);
  c2:	ea e7       	ldi	r30, 0x7A	; 122
  c4:	f0 e0       	ldi	r31, 0x00	; 0
  c6:	80 81       	ld	r24, Z
  c8:	86 68       	ori	r24, 0x86	; 134
  ca:	80 83       	st	Z, r24
	ADCSRA &= ~(1<<ADPS0);
  cc:	80 81       	ld	r24, Z
  ce:	8e 7f       	andi	r24, 0xFE	; 254
  d0:	80 83       	st	Z, r24
	
	ADCSRA |= (1<<ADSC);
  d2:	80 81       	ld	r24, Z
  d4:	80 64       	ori	r24, 0x40	; 64
  d6:	80 83       	st	Z, r24
  d8:	08 95       	ret

000000da <ADC_Read>:

}

//polling ADC 
uint32_t ADC_Read(){
	while(!(ADCSRA &&(1<<ADIF)));
  da:	ea e7       	ldi	r30, 0x7A	; 122
  dc:	f0 e0       	ldi	r31, 0x00	; 0
  de:	80 81       	ld	r24, Z
  e0:	88 23       	and	r24, r24
  e2:	e9 f3       	breq	.-6      	; 0xde <ADC_Read+0x4>
	return ADC;
  e4:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
  e8:	70 91 79 00 	lds	r23, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
  ec:	80 e0       	ldi	r24, 0x00	; 0
  ee:	90 e0       	ldi	r25, 0x00	; 0
}
  f0:	08 95       	ret

000000f2 <PWM_Init>:
  f2:	e1 e8       	ldi	r30, 0x81	; 129
  f4:	f0 e0       	ldi	r31, 0x00	; 0
  f6:	80 81       	ld	r24, Z
  f8:	8b 60       	ori	r24, 0x0B	; 11
  fa:	80 83       	st	Z, r24
  fc:	ef e6       	ldi	r30, 0x6F	; 111
  fe:	f0 e0       	ldi	r31, 0x00	; 0
 100:	80 81       	ld	r24, Z
 102:	86 60       	ori	r24, 0x06	; 6
 104:	80 83       	st	Z, r24
 106:	08 95       	ret

00000108 <PWM_Change>:
 108:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 10c:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 110:	70 93 8b 00 	sts	0x008B, r23	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
 114:	60 93 8a 00 	sts	0x008A, r22	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
 118:	08 95       	ret

0000011a <UART_Init>:
		}
	}
	//after message is parsed empty the array, reset the numbers 
	memset(receiveBuffer, 0, sizeof(receiveBuffer)); //clear the array to 0 
	reverseCurlyBracketCount = 0;
	messageReceived = false;
 11a:	e5 ec       	ldi	r30, 0xC5	; 197
 11c:	f0 e0       	ldi	r31, 0x00	; 0
 11e:	20 81       	ld	r18, Z
 120:	92 2b       	or	r25, r18
 122:	90 83       	st	Z, r25
 124:	e4 ec       	ldi	r30, 0xC4	; 196
 126:	f0 e0       	ldi	r31, 0x00	; 0
 128:	90 81       	ld	r25, Z
 12a:	89 2b       	or	r24, r25
 12c:	80 83       	st	Z, r24
 12e:	e1 ec       	ldi	r30, 0xC1	; 193
 130:	f0 e0       	ldi	r31, 0x00	; 0
 132:	80 81       	ld	r24, Z
 134:	89 60       	ori	r24, 0x09	; 9
 136:	80 83       	st	Z, r24
 138:	a2 ec       	ldi	r26, 0xC2	; 194
 13a:	b0 e0       	ldi	r27, 0x00	; 0
 13c:	8c 91       	ld	r24, X
 13e:	86 60       	ori	r24, 0x06	; 6
 140:	8c 93       	st	X, r24
 142:	80 81       	ld	r24, Z
 144:	80 68       	ori	r24, 0x80	; 128
 146:	80 83       	st	Z, r24
 148:	08 95       	ret

0000014a <UART_Transmit>:
}

//
void UART_Transmit(uint8_t myValue){
	//disable receive 
	UCSR0B &= ~(1 << RXEN0);
 14a:	e1 ec       	ldi	r30, 0xC1	; 193
 14c:	f0 e0       	ldi	r31, 0x00	; 0
 14e:	90 81       	ld	r25, Z
 150:	9f 7e       	andi	r25, 0xEF	; 239
 152:	90 83       	st	Z, r25
	UCSR0B &= ~(1 << RXCIE0);
 154:	90 81       	ld	r25, Z
 156:	9f 77       	andi	r25, 0x7F	; 127
 158:	90 83       	st	Z, r25
	while (!((1<<UDRE0)&&(UCSR0A))); //wait until the transmit register is ready
 15a:	e0 ec       	ldi	r30, 0xC0	; 192
 15c:	f0 e0       	ldi	r31, 0x00	; 0
 15e:	90 81       	ld	r25, Z
 160:	99 23       	and	r25, r25
 162:	e9 f3       	breq	.-6      	; 0x15e <UART_Transmit+0x14>
	UDR0 = myValue;//once ready, store next value for transmission
 164:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 168:	08 95       	ret

0000016a <usart_putchar_printf>:
}

uint8_t ASCIIConversion(uint8_t value){
	uint8_t asciiValue = value + 48;
	return asciiValue;
}
 16a:	cf 93       	push	r28
 16c:	c8 2f       	mov	r28, r24
 16e:	8a 30       	cpi	r24, 0x0A	; 10
 170:	19 f4       	brne	.+6      	; 0x178 <usart_putchar_printf+0xe>
 172:	8d e0       	ldi	r24, 0x0D	; 13
 174:	0e 94 a5 00 	call	0x14a	; 0x14a <UART_Transmit>
 178:	8c 2f       	mov	r24, r28
 17a:	0e 94 a5 00 	call	0x14a	; 0x14a <UART_Transmit>
 17e:	80 e0       	ldi	r24, 0x00	; 0
 180:	90 e0       	ldi	r25, 0x00	; 0
 182:	cf 91       	pop	r28
 184:	08 95       	ret

00000186 <__vector_18>:
 186:	1f 92       	push	r1
 188:	0f 92       	push	r0
 18a:	0f b6       	in	r0, 0x3f	; 63
 18c:	0f 92       	push	r0
 18e:	11 24       	eor	r1, r1
 190:	5b 9a       	sbi	0x0b, 3	; 11
 192:	0f 90       	pop	r0
 194:	0f be       	out	0x3f, r0	; 63
 196:	0f 90       	pop	r0
 198:	1f 90       	pop	r1
 19a:	18 95       	reti

0000019c <__vector_12>:
 19c:	1f 92       	push	r1
 19e:	0f 92       	push	r0
 1a0:	0f b6       	in	r0, 0x3f	; 63
 1a2:	0f 92       	push	r0
 1a4:	11 24       	eor	r1, r1
 1a6:	8f 93       	push	r24
 1a8:	9f 93       	push	r25
 1aa:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <isLHS>
 1ae:	81 11       	cpse	r24, r1
 1b0:	04 c0       	rjmp	.+8      	; 0x1ba <__vector_12+0x1e>
 1b2:	80 91 15 01 	lds	r24, 0x0115	; 0x800115 <lowPowerMode>
 1b6:	88 23       	and	r24, r24
 1b8:	51 f0       	breq	.+20     	; 0x1ce <__vector_12+0x32>
 1ba:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <__data_end>
 1be:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <count>
 1c2:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <noOfWaves>
 1c6:	89 17       	cp	r24, r25
 1c8:	58 f0       	brcs	.+22     	; 0x1e0 <__vector_12+0x44>
 1ca:	2a 98       	cbi	0x05, 2	; 5
 1cc:	09 c0       	rjmp	.+18     	; 0x1e0 <__vector_12+0x44>
 1ce:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <__data_end>
 1d2:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <count>
 1d6:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <noOfWaves>
 1da:	89 17       	cp	r24, r25
 1dc:	08 f0       	brcs	.+2      	; 0x1e0 <__vector_12+0x44>
 1de:	29 98       	cbi	0x05, 1	; 5
 1e0:	9f 91       	pop	r25
 1e2:	8f 91       	pop	r24
 1e4:	0f 90       	pop	r0
 1e6:	0f be       	out	0x3f, r0	; 63
 1e8:	0f 90       	pop	r0
 1ea:	1f 90       	pop	r1
 1ec:	18 95       	reti

000001ee <ConvertTimerValueToDutyCycle>:
 1ee:	20 91 0e 01 	lds	r18, 0x010E	; 0x80010e <dutyCycle>
 1f2:	30 91 0f 01 	lds	r19, 0x010F	; 0x80010f <dutyCycle+0x1>
 1f6:	40 91 10 01 	lds	r20, 0x0110	; 0x800110 <dutyCycle+0x2>
 1fa:	50 91 11 01 	lds	r21, 0x0111	; 0x800111 <dutyCycle+0x3>
 1fe:	ad e7       	ldi	r26, 0x7D	; 125
 200:	b0 e0       	ldi	r27, 0x00	; 0
 202:	0e 94 14 02 	call	0x428	; 0x428 <__muluhisi3>
 206:	24 e6       	ldi	r18, 0x64	; 100
 208:	30 e0       	ldi	r19, 0x00	; 0
 20a:	40 e0       	ldi	r20, 0x00	; 0
 20c:	50 e0       	ldi	r21, 0x00	; 0
 20e:	0e 94 f2 01 	call	0x3e4	; 0x3e4 <__udivmodsi4>
 212:	82 2f       	mov	r24, r18
 214:	08 95       	ret

00000216 <CalculateDeadTime>:
 216:	60 91 13 01 	lds	r22, 0x0113	; 0x800113 <frequency>
 21a:	20 91 12 01 	lds	r18, 0x0112	; 0x800112 <noOfWaves>
 21e:	70 e0       	ldi	r23, 0x00	; 0
 220:	88 e8       	ldi	r24, 0x88	; 136
 222:	93 e1       	ldi	r25, 0x13	; 19
 224:	0e 94 de 01 	call	0x3bc	; 0x3bc <__divmodhi4>
 228:	62 1b       	sub	r22, r18
 22a:	71 09       	sbc	r23, r1
 22c:	8d e7       	ldi	r24, 0x7D	; 125
 22e:	28 2f       	mov	r18, r24
 230:	26 9f       	mul	r18, r22
 232:	c0 01       	movw	r24, r0
 234:	27 9f       	mul	r18, r23
 236:	90 0d       	add	r25, r0
 238:	11 24       	eor	r1, r1
 23a:	08 95       	ret

0000023c <__vector_11>:
 23c:	1f 92       	push	r1
 23e:	0f 92       	push	r0
 240:	0f b6       	in	r0, 0x3f	; 63
 242:	0f 92       	push	r0
 244:	11 24       	eor	r1, r1
 246:	2f 93       	push	r18
 248:	3f 93       	push	r19
 24a:	4f 93       	push	r20
 24c:	5f 93       	push	r21
 24e:	6f 93       	push	r22
 250:	7f 93       	push	r23
 252:	8f 93       	push	r24
 254:	9f 93       	push	r25
 256:	af 93       	push	r26
 258:	bf 93       	push	r27
 25a:	ef 93       	push	r30
 25c:	ff 93       	push	r31
 25e:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <isLHS>
 262:	81 11       	cpse	r24, r1
 264:	04 c0       	rjmp	.+8      	; 0x26e <__vector_11+0x32>
 266:	80 91 15 01 	lds	r24, 0x0115	; 0x800115 <lowPowerMode>
 26a:	88 23       	and	r24, r24
 26c:	b9 f1       	breq	.+110    	; 0x2dc <__vector_11+0xa0>
 26e:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <count>
 272:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <noOfWaves>
 276:	89 17       	cp	r24, r25
 278:	60 f0       	brcs	.+24     	; 0x292 <__vector_11+0x56>
 27a:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <__data_end>
 27e:	81 11       	cpse	r24, r1
 280:	08 c0       	rjmp	.+16     	; 0x292 <__vector_11+0x56>
 282:	2a 9a       	sbi	0x05, 2	; 5
 284:	5d 9a       	sbi	0x0b, 5	; 11
 286:	80 91 1d 01 	lds	r24, 0x011D	; 0x80011d <count>
 28a:	8f 5f       	subi	r24, 0xFF	; 255
 28c:	80 93 1d 01 	sts	0x011D, r24	; 0x80011d <count>
 290:	57 c0       	rjmp	.+174    	; 0x340 <__vector_11+0x104>
 292:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <count>
 296:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <noOfWaves>
 29a:	89 17       	cp	r24, r25
 29c:	a0 f4       	brcc	.+40     	; 0x2c6 <__vector_11+0x8a>
 29e:	5d 98       	cbi	0x0b, 5	; 11
 2a0:	2a 98       	cbi	0x05, 2	; 5
 2a2:	0e 94 0b 01 	call	0x216	; 0x216 <CalculateDeadTime>
 2a6:	6f ef       	ldi	r22, 0xFF	; 255
 2a8:	7f ef       	ldi	r23, 0xFF	; 255
 2aa:	0e 94 84 00 	call	0x108	; 0x108 <PWM_Change>
 2ae:	80 91 15 01 	lds	r24, 0x0115	; 0x800115 <lowPowerMode>
 2b2:	81 11       	cpse	r24, r1
 2b4:	02 c0       	rjmp	.+4      	; 0x2ba <__vector_11+0x7e>
 2b6:	10 92 16 01 	sts	0x0116, r1	; 0x800116 <isLHS>
 2ba:	10 92 1d 01 	sts	0x011D, r1	; 0x80011d <count>
 2be:	81 e0       	ldi	r24, 0x01	; 1
 2c0:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <__data_end>
 2c4:	3d c0       	rjmp	.+122    	; 0x340 <__vector_11+0x104>
 2c6:	10 92 1c 01 	sts	0x011C, r1	; 0x80011c <__data_end>
 2ca:	0e 94 f7 00 	call	0x1ee	; 0x1ee <ConvertTimerValueToDutyCycle>
 2ce:	68 2f       	mov	r22, r24
 2d0:	70 e0       	ldi	r23, 0x00	; 0
 2d2:	8d e7       	ldi	r24, 0x7D	; 125
 2d4:	90 e0       	ldi	r25, 0x00	; 0
 2d6:	0e 94 84 00 	call	0x108	; 0x108 <PWM_Change>
 2da:	32 c0       	rjmp	.+100    	; 0x340 <__vector_11+0x104>
 2dc:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <count>
 2e0:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <noOfWaves>
 2e4:	89 17       	cp	r24, r25
 2e6:	60 f0       	brcs	.+24     	; 0x300 <__vector_11+0xc4>
 2e8:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <__data_end>
 2ec:	81 11       	cpse	r24, r1
 2ee:	08 c0       	rjmp	.+16     	; 0x300 <__vector_11+0xc4>
 2f0:	5e 9a       	sbi	0x0b, 6	; 11
 2f2:	29 9a       	sbi	0x05, 1	; 5
 2f4:	80 91 1d 01 	lds	r24, 0x011D	; 0x80011d <count>
 2f8:	8f 5f       	subi	r24, 0xFF	; 255
 2fa:	80 93 1d 01 	sts	0x011D, r24	; 0x80011d <count>
 2fe:	20 c0       	rjmp	.+64     	; 0x340 <__vector_11+0x104>
 300:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <count>
 304:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <noOfWaves>
 308:	89 17       	cp	r24, r25
 30a:	80 f4       	brcc	.+32     	; 0x32c <__vector_11+0xf0>
 30c:	5e 98       	cbi	0x0b, 6	; 11
 30e:	29 98       	cbi	0x05, 1	; 5
 310:	0e 94 0b 01 	call	0x216	; 0x216 <CalculateDeadTime>
 314:	6f ef       	ldi	r22, 0xFF	; 255
 316:	7f ef       	ldi	r23, 0xFF	; 255
 318:	0e 94 84 00 	call	0x108	; 0x108 <PWM_Change>
 31c:	81 e0       	ldi	r24, 0x01	; 1
 31e:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <isLHS>
 322:	10 92 1d 01 	sts	0x011D, r1	; 0x80011d <count>
 326:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <__data_end>
 32a:	0a c0       	rjmp	.+20     	; 0x340 <__vector_11+0x104>
 32c:	10 92 1c 01 	sts	0x011C, r1	; 0x80011c <__data_end>
 330:	0e 94 f7 00 	call	0x1ee	; 0x1ee <ConvertTimerValueToDutyCycle>
 334:	68 2f       	mov	r22, r24
 336:	70 e0       	ldi	r23, 0x00	; 0
 338:	8d e7       	ldi	r24, 0x7D	; 125
 33a:	90 e0       	ldi	r25, 0x00	; 0
 33c:	0e 94 84 00 	call	0x108	; 0x108 <PWM_Change>
 340:	ff 91       	pop	r31
 342:	ef 91       	pop	r30
 344:	bf 91       	pop	r27
 346:	af 91       	pop	r26
 348:	9f 91       	pop	r25
 34a:	8f 91       	pop	r24
 34c:	7f 91       	pop	r23
 34e:	6f 91       	pop	r22
 350:	5f 91       	pop	r21
 352:	4f 91       	pop	r20
 354:	3f 91       	pop	r19
 356:	2f 91       	pop	r18
 358:	0f 90       	pop	r0
 35a:	0f be       	out	0x3f, r0	; 63
 35c:	0f 90       	pop	r0
 35e:	1f 90       	pop	r1
 360:	18 95       	reti

00000362 <main>:

int main(void)
{	
	stdout= &mystdout;//printf
 362:	80 e0       	ldi	r24, 0x00	; 0
 364:	91 e0       	ldi	r25, 0x01	; 1
 366:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <__iob+0x3>
 36a:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <__iob+0x2>

	//clock_prescale_set(clock_div_2);
    sei();
 36e:	78 94       	sei
	UART_Init(UBRR_VALUE);
 370:	83 e3       	ldi	r24, 0x33	; 51
 372:	90 e0       	ldi	r25, 0x00	; 0
 374:	0e 94 8d 00 	call	0x11a	; 0x11a <UART_Init>
	ADC_Init();
 378:	0e 94 53 00 	call	0xa6	; 0xa6 <ADC_Init>
	PWM_Init();
 37c:	0e 94 79 00 	call	0xf2	; 0xf2 <PWM_Init>
	
	//output pin setup
	DDRB |= (1<<PB1)|(1<<PB2);
 380:	84 b1       	in	r24, 0x04	; 4
 382:	86 60       	ori	r24, 0x06	; 6
 384:	84 b9       	out	0x04, r24	; 4
	DDRD |= (1<<PD5)|(1<<PD6);
 386:	8a b1       	in	r24, 0x0a	; 10
 388:	80 66       	ori	r24, 0x60	; 96
 38a:	8a b9       	out	0x0a, r24	; 10
	DDRD |= (1<<PD3);
 38c:	53 9a       	sbi	0x0a, 3	; 10
			//voltageLHS[voltageLHSIndex] = ADC_Read();
			//UART_SendJson(1, voltageLHSIndex, voltageLHS[voltageLHSIndex]/10, 0, false, true, true, 120,123);
			//voltageLHSIndex++;
			//ADCSRA |= (1<<ADSC);
		//}
		ADCSRA |= (1<<ADSC);
 38e:	0a e7       	ldi	r16, 0x7A	; 122
 390:	10 e0       	ldi	r17, 0x00	; 0
		int value = ADC_Read();
		printf("%d\n",value);
 392:	c7 e1       	ldi	r28, 0x17	; 23
 394:	d1 e0       	ldi	r29, 0x01	; 1
	//UART_SendJson(12, 15, voltage, 20, false, true, true, 120,123);

    while (1) 
    {
	
		if(changePumpingEffort){
 396:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <changePumpingEffort>
			//voltageLHS[voltageLHSIndex] = ADC_Read();
			//UART_SendJson(1, voltageLHSIndex, voltageLHS[voltageLHSIndex]/10, 0, false, true, true, 120,123);
			//voltageLHSIndex++;
			//ADCSRA |= (1<<ADSC);
		//}
		ADCSRA |= (1<<ADSC);
 39a:	f8 01       	movw	r30, r16
 39c:	80 81       	ld	r24, Z
 39e:	80 64       	ori	r24, 0x40	; 64
 3a0:	80 83       	st	Z, r24
		int value = ADC_Read();
 3a2:	0e 94 6d 00 	call	0xda	; 0xda <ADC_Read>
		printf("%d\n",value);
 3a6:	7f 93       	push	r23
 3a8:	6f 93       	push	r22
 3aa:	df 93       	push	r29
 3ac:	cf 93       	push	r28
 3ae:	0e 94 42 02 	call	0x484	; 0x484 <printf>
 3b2:	0f 90       	pop	r0
 3b4:	0f 90       	pop	r0
 3b6:	0f 90       	pop	r0
 3b8:	0f 90       	pop	r0
 3ba:	ed cf       	rjmp	.-38     	; 0x396 <main+0x34>

000003bc <__divmodhi4>:
 3bc:	97 fb       	bst	r25, 7
 3be:	07 2e       	mov	r0, r23
 3c0:	16 f4       	brtc	.+4      	; 0x3c6 <__divmodhi4+0xa>
 3c2:	00 94       	com	r0
 3c4:	07 d0       	rcall	.+14     	; 0x3d4 <__divmodhi4_neg1>
 3c6:	77 fd       	sbrc	r23, 7
 3c8:	09 d0       	rcall	.+18     	; 0x3dc <__divmodhi4_neg2>
 3ca:	0e 94 1f 02 	call	0x43e	; 0x43e <__udivmodhi4>
 3ce:	07 fc       	sbrc	r0, 7
 3d0:	05 d0       	rcall	.+10     	; 0x3dc <__divmodhi4_neg2>
 3d2:	3e f4       	brtc	.+14     	; 0x3e2 <__divmodhi4_exit>

000003d4 <__divmodhi4_neg1>:
 3d4:	90 95       	com	r25
 3d6:	81 95       	neg	r24
 3d8:	9f 4f       	sbci	r25, 0xFF	; 255
 3da:	08 95       	ret

000003dc <__divmodhi4_neg2>:
 3dc:	70 95       	com	r23
 3de:	61 95       	neg	r22
 3e0:	7f 4f       	sbci	r23, 0xFF	; 255

000003e2 <__divmodhi4_exit>:
 3e2:	08 95       	ret

000003e4 <__udivmodsi4>:
 3e4:	a1 e2       	ldi	r26, 0x21	; 33
 3e6:	1a 2e       	mov	r1, r26
 3e8:	aa 1b       	sub	r26, r26
 3ea:	bb 1b       	sub	r27, r27
 3ec:	fd 01       	movw	r30, r26
 3ee:	0d c0       	rjmp	.+26     	; 0x40a <__udivmodsi4_ep>

000003f0 <__udivmodsi4_loop>:
 3f0:	aa 1f       	adc	r26, r26
 3f2:	bb 1f       	adc	r27, r27
 3f4:	ee 1f       	adc	r30, r30
 3f6:	ff 1f       	adc	r31, r31
 3f8:	a2 17       	cp	r26, r18
 3fa:	b3 07       	cpc	r27, r19
 3fc:	e4 07       	cpc	r30, r20
 3fe:	f5 07       	cpc	r31, r21
 400:	20 f0       	brcs	.+8      	; 0x40a <__udivmodsi4_ep>
 402:	a2 1b       	sub	r26, r18
 404:	b3 0b       	sbc	r27, r19
 406:	e4 0b       	sbc	r30, r20
 408:	f5 0b       	sbc	r31, r21

0000040a <__udivmodsi4_ep>:
 40a:	66 1f       	adc	r22, r22
 40c:	77 1f       	adc	r23, r23
 40e:	88 1f       	adc	r24, r24
 410:	99 1f       	adc	r25, r25
 412:	1a 94       	dec	r1
 414:	69 f7       	brne	.-38     	; 0x3f0 <__udivmodsi4_loop>
 416:	60 95       	com	r22
 418:	70 95       	com	r23
 41a:	80 95       	com	r24
 41c:	90 95       	com	r25
 41e:	9b 01       	movw	r18, r22
 420:	ac 01       	movw	r20, r24
 422:	bd 01       	movw	r22, r26
 424:	cf 01       	movw	r24, r30
 426:	08 95       	ret

00000428 <__muluhisi3>:
 428:	0e 94 33 02 	call	0x466	; 0x466 <__umulhisi3>
 42c:	a5 9f       	mul	r26, r21
 42e:	90 0d       	add	r25, r0
 430:	b4 9f       	mul	r27, r20
 432:	90 0d       	add	r25, r0
 434:	a4 9f       	mul	r26, r20
 436:	80 0d       	add	r24, r0
 438:	91 1d       	adc	r25, r1
 43a:	11 24       	eor	r1, r1
 43c:	08 95       	ret

0000043e <__udivmodhi4>:
 43e:	aa 1b       	sub	r26, r26
 440:	bb 1b       	sub	r27, r27
 442:	51 e1       	ldi	r21, 0x11	; 17
 444:	07 c0       	rjmp	.+14     	; 0x454 <__udivmodhi4_ep>

00000446 <__udivmodhi4_loop>:
 446:	aa 1f       	adc	r26, r26
 448:	bb 1f       	adc	r27, r27
 44a:	a6 17       	cp	r26, r22
 44c:	b7 07       	cpc	r27, r23
 44e:	10 f0       	brcs	.+4      	; 0x454 <__udivmodhi4_ep>
 450:	a6 1b       	sub	r26, r22
 452:	b7 0b       	sbc	r27, r23

00000454 <__udivmodhi4_ep>:
 454:	88 1f       	adc	r24, r24
 456:	99 1f       	adc	r25, r25
 458:	5a 95       	dec	r21
 45a:	a9 f7       	brne	.-22     	; 0x446 <__udivmodhi4_loop>
 45c:	80 95       	com	r24
 45e:	90 95       	com	r25
 460:	bc 01       	movw	r22, r24
 462:	cd 01       	movw	r24, r26
 464:	08 95       	ret

00000466 <__umulhisi3>:
 466:	a2 9f       	mul	r26, r18
 468:	b0 01       	movw	r22, r0
 46a:	b3 9f       	mul	r27, r19
 46c:	c0 01       	movw	r24, r0
 46e:	a3 9f       	mul	r26, r19
 470:	70 0d       	add	r23, r0
 472:	81 1d       	adc	r24, r1
 474:	11 24       	eor	r1, r1
 476:	91 1d       	adc	r25, r1
 478:	b2 9f       	mul	r27, r18
 47a:	70 0d       	add	r23, r0
 47c:	81 1d       	adc	r24, r1
 47e:	11 24       	eor	r1, r1
 480:	91 1d       	adc	r25, r1
 482:	08 95       	ret

00000484 <printf>:
 484:	a0 e0       	ldi	r26, 0x00	; 0
 486:	b0 e0       	ldi	r27, 0x00	; 0
 488:	e8 e4       	ldi	r30, 0x48	; 72
 48a:	f2 e0       	ldi	r31, 0x02	; 2
 48c:	0c 94 f9 04 	jmp	0x9f2	; 0x9f2 <__prologue_saves__+0x20>
 490:	ae 01       	movw	r20, r28
 492:	4b 5f       	subi	r20, 0xFB	; 251
 494:	5f 4f       	sbci	r21, 0xFF	; 255
 496:	fa 01       	movw	r30, r20
 498:	61 91       	ld	r22, Z+
 49a:	71 91       	ld	r23, Z+
 49c:	af 01       	movw	r20, r30
 49e:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <__iob+0x2>
 4a2:	90 91 21 01 	lds	r25, 0x0121	; 0x800121 <__iob+0x3>
 4a6:	0e 94 58 02 	call	0x4b0	; 0x4b0 <vfprintf>
 4aa:	e2 e0       	ldi	r30, 0x02	; 2
 4ac:	0c 94 15 05 	jmp	0xa2a	; 0xa2a <__epilogue_restores__+0x20>

000004b0 <vfprintf>:
 4b0:	ab e0       	ldi	r26, 0x0B	; 11
 4b2:	b0 e0       	ldi	r27, 0x00	; 0
 4b4:	ee e5       	ldi	r30, 0x5E	; 94
 4b6:	f2 e0       	ldi	r31, 0x02	; 2
 4b8:	0c 94 e9 04 	jmp	0x9d2	; 0x9d2 <__prologue_saves__>
 4bc:	6c 01       	movw	r12, r24
 4be:	7b 01       	movw	r14, r22
 4c0:	8a 01       	movw	r16, r20
 4c2:	fc 01       	movw	r30, r24
 4c4:	17 82       	std	Z+7, r1	; 0x07
 4c6:	16 82       	std	Z+6, r1	; 0x06
 4c8:	83 81       	ldd	r24, Z+3	; 0x03
 4ca:	81 ff       	sbrs	r24, 1
 4cc:	cc c1       	rjmp	.+920    	; 0x866 <vfprintf+0x3b6>
 4ce:	ce 01       	movw	r24, r28
 4d0:	01 96       	adiw	r24, 0x01	; 1
 4d2:	3c 01       	movw	r6, r24
 4d4:	f6 01       	movw	r30, r12
 4d6:	93 81       	ldd	r25, Z+3	; 0x03
 4d8:	f7 01       	movw	r30, r14
 4da:	93 fd       	sbrc	r25, 3
 4dc:	85 91       	lpm	r24, Z+
 4de:	93 ff       	sbrs	r25, 3
 4e0:	81 91       	ld	r24, Z+
 4e2:	7f 01       	movw	r14, r30
 4e4:	88 23       	and	r24, r24
 4e6:	09 f4       	brne	.+2      	; 0x4ea <vfprintf+0x3a>
 4e8:	ba c1       	rjmp	.+884    	; 0x85e <vfprintf+0x3ae>
 4ea:	85 32       	cpi	r24, 0x25	; 37
 4ec:	39 f4       	brne	.+14     	; 0x4fc <vfprintf+0x4c>
 4ee:	93 fd       	sbrc	r25, 3
 4f0:	85 91       	lpm	r24, Z+
 4f2:	93 ff       	sbrs	r25, 3
 4f4:	81 91       	ld	r24, Z+
 4f6:	7f 01       	movw	r14, r30
 4f8:	85 32       	cpi	r24, 0x25	; 37
 4fa:	29 f4       	brne	.+10     	; 0x506 <vfprintf+0x56>
 4fc:	b6 01       	movw	r22, r12
 4fe:	90 e0       	ldi	r25, 0x00	; 0
 500:	0e 94 4f 04 	call	0x89e	; 0x89e <fputc>
 504:	e7 cf       	rjmp	.-50     	; 0x4d4 <vfprintf+0x24>
 506:	91 2c       	mov	r9, r1
 508:	21 2c       	mov	r2, r1
 50a:	31 2c       	mov	r3, r1
 50c:	ff e1       	ldi	r31, 0x1F	; 31
 50e:	f3 15       	cp	r31, r3
 510:	d8 f0       	brcs	.+54     	; 0x548 <vfprintf+0x98>
 512:	8b 32       	cpi	r24, 0x2B	; 43
 514:	79 f0       	breq	.+30     	; 0x534 <vfprintf+0x84>
 516:	38 f4       	brcc	.+14     	; 0x526 <vfprintf+0x76>
 518:	80 32       	cpi	r24, 0x20	; 32
 51a:	79 f0       	breq	.+30     	; 0x53a <vfprintf+0x8a>
 51c:	83 32       	cpi	r24, 0x23	; 35
 51e:	a1 f4       	brne	.+40     	; 0x548 <vfprintf+0x98>
 520:	23 2d       	mov	r18, r3
 522:	20 61       	ori	r18, 0x10	; 16
 524:	1d c0       	rjmp	.+58     	; 0x560 <vfprintf+0xb0>
 526:	8d 32       	cpi	r24, 0x2D	; 45
 528:	61 f0       	breq	.+24     	; 0x542 <vfprintf+0x92>
 52a:	80 33       	cpi	r24, 0x30	; 48
 52c:	69 f4       	brne	.+26     	; 0x548 <vfprintf+0x98>
 52e:	23 2d       	mov	r18, r3
 530:	21 60       	ori	r18, 0x01	; 1
 532:	16 c0       	rjmp	.+44     	; 0x560 <vfprintf+0xb0>
 534:	83 2d       	mov	r24, r3
 536:	82 60       	ori	r24, 0x02	; 2
 538:	38 2e       	mov	r3, r24
 53a:	e3 2d       	mov	r30, r3
 53c:	e4 60       	ori	r30, 0x04	; 4
 53e:	3e 2e       	mov	r3, r30
 540:	2a c0       	rjmp	.+84     	; 0x596 <vfprintf+0xe6>
 542:	f3 2d       	mov	r31, r3
 544:	f8 60       	ori	r31, 0x08	; 8
 546:	1d c0       	rjmp	.+58     	; 0x582 <vfprintf+0xd2>
 548:	37 fc       	sbrc	r3, 7
 54a:	2d c0       	rjmp	.+90     	; 0x5a6 <vfprintf+0xf6>
 54c:	20 ed       	ldi	r18, 0xD0	; 208
 54e:	28 0f       	add	r18, r24
 550:	2a 30       	cpi	r18, 0x0A	; 10
 552:	40 f0       	brcs	.+16     	; 0x564 <vfprintf+0xb4>
 554:	8e 32       	cpi	r24, 0x2E	; 46
 556:	b9 f4       	brne	.+46     	; 0x586 <vfprintf+0xd6>
 558:	36 fc       	sbrc	r3, 6
 55a:	81 c1       	rjmp	.+770    	; 0x85e <vfprintf+0x3ae>
 55c:	23 2d       	mov	r18, r3
 55e:	20 64       	ori	r18, 0x40	; 64
 560:	32 2e       	mov	r3, r18
 562:	19 c0       	rjmp	.+50     	; 0x596 <vfprintf+0xe6>
 564:	36 fe       	sbrs	r3, 6
 566:	06 c0       	rjmp	.+12     	; 0x574 <vfprintf+0xc4>
 568:	8a e0       	ldi	r24, 0x0A	; 10
 56a:	98 9e       	mul	r9, r24
 56c:	20 0d       	add	r18, r0
 56e:	11 24       	eor	r1, r1
 570:	92 2e       	mov	r9, r18
 572:	11 c0       	rjmp	.+34     	; 0x596 <vfprintf+0xe6>
 574:	ea e0       	ldi	r30, 0x0A	; 10
 576:	2e 9e       	mul	r2, r30
 578:	20 0d       	add	r18, r0
 57a:	11 24       	eor	r1, r1
 57c:	22 2e       	mov	r2, r18
 57e:	f3 2d       	mov	r31, r3
 580:	f0 62       	ori	r31, 0x20	; 32
 582:	3f 2e       	mov	r3, r31
 584:	08 c0       	rjmp	.+16     	; 0x596 <vfprintf+0xe6>
 586:	8c 36       	cpi	r24, 0x6C	; 108
 588:	21 f4       	brne	.+8      	; 0x592 <vfprintf+0xe2>
 58a:	83 2d       	mov	r24, r3
 58c:	80 68       	ori	r24, 0x80	; 128
 58e:	38 2e       	mov	r3, r24
 590:	02 c0       	rjmp	.+4      	; 0x596 <vfprintf+0xe6>
 592:	88 36       	cpi	r24, 0x68	; 104
 594:	41 f4       	brne	.+16     	; 0x5a6 <vfprintf+0xf6>
 596:	f7 01       	movw	r30, r14
 598:	93 fd       	sbrc	r25, 3
 59a:	85 91       	lpm	r24, Z+
 59c:	93 ff       	sbrs	r25, 3
 59e:	81 91       	ld	r24, Z+
 5a0:	7f 01       	movw	r14, r30
 5a2:	81 11       	cpse	r24, r1
 5a4:	b3 cf       	rjmp	.-154    	; 0x50c <vfprintf+0x5c>
 5a6:	98 2f       	mov	r25, r24
 5a8:	9f 7d       	andi	r25, 0xDF	; 223
 5aa:	95 54       	subi	r25, 0x45	; 69
 5ac:	93 30       	cpi	r25, 0x03	; 3
 5ae:	28 f4       	brcc	.+10     	; 0x5ba <vfprintf+0x10a>
 5b0:	0c 5f       	subi	r16, 0xFC	; 252
 5b2:	1f 4f       	sbci	r17, 0xFF	; 255
 5b4:	9f e3       	ldi	r25, 0x3F	; 63
 5b6:	99 83       	std	Y+1, r25	; 0x01
 5b8:	0d c0       	rjmp	.+26     	; 0x5d4 <vfprintf+0x124>
 5ba:	83 36       	cpi	r24, 0x63	; 99
 5bc:	31 f0       	breq	.+12     	; 0x5ca <vfprintf+0x11a>
 5be:	83 37       	cpi	r24, 0x73	; 115
 5c0:	71 f0       	breq	.+28     	; 0x5de <vfprintf+0x12e>
 5c2:	83 35       	cpi	r24, 0x53	; 83
 5c4:	09 f0       	breq	.+2      	; 0x5c8 <vfprintf+0x118>
 5c6:	59 c0       	rjmp	.+178    	; 0x67a <vfprintf+0x1ca>
 5c8:	21 c0       	rjmp	.+66     	; 0x60c <vfprintf+0x15c>
 5ca:	f8 01       	movw	r30, r16
 5cc:	80 81       	ld	r24, Z
 5ce:	89 83       	std	Y+1, r24	; 0x01
 5d0:	0e 5f       	subi	r16, 0xFE	; 254
 5d2:	1f 4f       	sbci	r17, 0xFF	; 255
 5d4:	88 24       	eor	r8, r8
 5d6:	83 94       	inc	r8
 5d8:	91 2c       	mov	r9, r1
 5da:	53 01       	movw	r10, r6
 5dc:	13 c0       	rjmp	.+38     	; 0x604 <vfprintf+0x154>
 5de:	28 01       	movw	r4, r16
 5e0:	f2 e0       	ldi	r31, 0x02	; 2
 5e2:	4f 0e       	add	r4, r31
 5e4:	51 1c       	adc	r5, r1
 5e6:	f8 01       	movw	r30, r16
 5e8:	a0 80       	ld	r10, Z
 5ea:	b1 80       	ldd	r11, Z+1	; 0x01
 5ec:	36 fe       	sbrs	r3, 6
 5ee:	03 c0       	rjmp	.+6      	; 0x5f6 <vfprintf+0x146>
 5f0:	69 2d       	mov	r22, r9
 5f2:	70 e0       	ldi	r23, 0x00	; 0
 5f4:	02 c0       	rjmp	.+4      	; 0x5fa <vfprintf+0x14a>
 5f6:	6f ef       	ldi	r22, 0xFF	; 255
 5f8:	7f ef       	ldi	r23, 0xFF	; 255
 5fa:	c5 01       	movw	r24, r10
 5fc:	0e 94 44 04 	call	0x888	; 0x888 <strnlen>
 600:	4c 01       	movw	r8, r24
 602:	82 01       	movw	r16, r4
 604:	f3 2d       	mov	r31, r3
 606:	ff 77       	andi	r31, 0x7F	; 127
 608:	3f 2e       	mov	r3, r31
 60a:	16 c0       	rjmp	.+44     	; 0x638 <vfprintf+0x188>
 60c:	28 01       	movw	r4, r16
 60e:	22 e0       	ldi	r18, 0x02	; 2
 610:	42 0e       	add	r4, r18
 612:	51 1c       	adc	r5, r1
 614:	f8 01       	movw	r30, r16
 616:	a0 80       	ld	r10, Z
 618:	b1 80       	ldd	r11, Z+1	; 0x01
 61a:	36 fe       	sbrs	r3, 6
 61c:	03 c0       	rjmp	.+6      	; 0x624 <vfprintf+0x174>
 61e:	69 2d       	mov	r22, r9
 620:	70 e0       	ldi	r23, 0x00	; 0
 622:	02 c0       	rjmp	.+4      	; 0x628 <vfprintf+0x178>
 624:	6f ef       	ldi	r22, 0xFF	; 255
 626:	7f ef       	ldi	r23, 0xFF	; 255
 628:	c5 01       	movw	r24, r10
 62a:	0e 94 39 04 	call	0x872	; 0x872 <strnlen_P>
 62e:	4c 01       	movw	r8, r24
 630:	f3 2d       	mov	r31, r3
 632:	f0 68       	ori	r31, 0x80	; 128
 634:	3f 2e       	mov	r3, r31
 636:	82 01       	movw	r16, r4
 638:	33 fc       	sbrc	r3, 3
 63a:	1b c0       	rjmp	.+54     	; 0x672 <vfprintf+0x1c2>
 63c:	82 2d       	mov	r24, r2
 63e:	90 e0       	ldi	r25, 0x00	; 0
 640:	88 16       	cp	r8, r24
 642:	99 06       	cpc	r9, r25
 644:	b0 f4       	brcc	.+44     	; 0x672 <vfprintf+0x1c2>
 646:	b6 01       	movw	r22, r12
 648:	80 e2       	ldi	r24, 0x20	; 32
 64a:	90 e0       	ldi	r25, 0x00	; 0
 64c:	0e 94 4f 04 	call	0x89e	; 0x89e <fputc>
 650:	2a 94       	dec	r2
 652:	f4 cf       	rjmp	.-24     	; 0x63c <vfprintf+0x18c>
 654:	f5 01       	movw	r30, r10
 656:	37 fc       	sbrc	r3, 7
 658:	85 91       	lpm	r24, Z+
 65a:	37 fe       	sbrs	r3, 7
 65c:	81 91       	ld	r24, Z+
 65e:	5f 01       	movw	r10, r30
 660:	b6 01       	movw	r22, r12
 662:	90 e0       	ldi	r25, 0x00	; 0
 664:	0e 94 4f 04 	call	0x89e	; 0x89e <fputc>
 668:	21 10       	cpse	r2, r1
 66a:	2a 94       	dec	r2
 66c:	21 e0       	ldi	r18, 0x01	; 1
 66e:	82 1a       	sub	r8, r18
 670:	91 08       	sbc	r9, r1
 672:	81 14       	cp	r8, r1
 674:	91 04       	cpc	r9, r1
 676:	71 f7       	brne	.-36     	; 0x654 <vfprintf+0x1a4>
 678:	e8 c0       	rjmp	.+464    	; 0x84a <vfprintf+0x39a>
 67a:	84 36       	cpi	r24, 0x64	; 100
 67c:	11 f0       	breq	.+4      	; 0x682 <vfprintf+0x1d2>
 67e:	89 36       	cpi	r24, 0x69	; 105
 680:	41 f5       	brne	.+80     	; 0x6d2 <vfprintf+0x222>
 682:	f8 01       	movw	r30, r16
 684:	37 fe       	sbrs	r3, 7
 686:	07 c0       	rjmp	.+14     	; 0x696 <vfprintf+0x1e6>
 688:	60 81       	ld	r22, Z
 68a:	71 81       	ldd	r23, Z+1	; 0x01
 68c:	82 81       	ldd	r24, Z+2	; 0x02
 68e:	93 81       	ldd	r25, Z+3	; 0x03
 690:	0c 5f       	subi	r16, 0xFC	; 252
 692:	1f 4f       	sbci	r17, 0xFF	; 255
 694:	08 c0       	rjmp	.+16     	; 0x6a6 <vfprintf+0x1f6>
 696:	60 81       	ld	r22, Z
 698:	71 81       	ldd	r23, Z+1	; 0x01
 69a:	07 2e       	mov	r0, r23
 69c:	00 0c       	add	r0, r0
 69e:	88 0b       	sbc	r24, r24
 6a0:	99 0b       	sbc	r25, r25
 6a2:	0e 5f       	subi	r16, 0xFE	; 254
 6a4:	1f 4f       	sbci	r17, 0xFF	; 255
 6a6:	f3 2d       	mov	r31, r3
 6a8:	ff 76       	andi	r31, 0x6F	; 111
 6aa:	3f 2e       	mov	r3, r31
 6ac:	97 ff       	sbrs	r25, 7
 6ae:	09 c0       	rjmp	.+18     	; 0x6c2 <vfprintf+0x212>
 6b0:	90 95       	com	r25
 6b2:	80 95       	com	r24
 6b4:	70 95       	com	r23
 6b6:	61 95       	neg	r22
 6b8:	7f 4f       	sbci	r23, 0xFF	; 255
 6ba:	8f 4f       	sbci	r24, 0xFF	; 255
 6bc:	9f 4f       	sbci	r25, 0xFF	; 255
 6be:	f0 68       	ori	r31, 0x80	; 128
 6c0:	3f 2e       	mov	r3, r31
 6c2:	2a e0       	ldi	r18, 0x0A	; 10
 6c4:	30 e0       	ldi	r19, 0x00	; 0
 6c6:	a3 01       	movw	r20, r6
 6c8:	0e 94 8b 04 	call	0x916	; 0x916 <__ultoa_invert>
 6cc:	88 2e       	mov	r8, r24
 6ce:	86 18       	sub	r8, r6
 6d0:	45 c0       	rjmp	.+138    	; 0x75c <vfprintf+0x2ac>
 6d2:	85 37       	cpi	r24, 0x75	; 117
 6d4:	31 f4       	brne	.+12     	; 0x6e2 <vfprintf+0x232>
 6d6:	23 2d       	mov	r18, r3
 6d8:	2f 7e       	andi	r18, 0xEF	; 239
 6da:	b2 2e       	mov	r11, r18
 6dc:	2a e0       	ldi	r18, 0x0A	; 10
 6de:	30 e0       	ldi	r19, 0x00	; 0
 6e0:	25 c0       	rjmp	.+74     	; 0x72c <vfprintf+0x27c>
 6e2:	93 2d       	mov	r25, r3
 6e4:	99 7f       	andi	r25, 0xF9	; 249
 6e6:	b9 2e       	mov	r11, r25
 6e8:	8f 36       	cpi	r24, 0x6F	; 111
 6ea:	c1 f0       	breq	.+48     	; 0x71c <vfprintf+0x26c>
 6ec:	18 f4       	brcc	.+6      	; 0x6f4 <vfprintf+0x244>
 6ee:	88 35       	cpi	r24, 0x58	; 88
 6f0:	79 f0       	breq	.+30     	; 0x710 <vfprintf+0x260>
 6f2:	b5 c0       	rjmp	.+362    	; 0x85e <vfprintf+0x3ae>
 6f4:	80 37       	cpi	r24, 0x70	; 112
 6f6:	19 f0       	breq	.+6      	; 0x6fe <vfprintf+0x24e>
 6f8:	88 37       	cpi	r24, 0x78	; 120
 6fa:	21 f0       	breq	.+8      	; 0x704 <vfprintf+0x254>
 6fc:	b0 c0       	rjmp	.+352    	; 0x85e <vfprintf+0x3ae>
 6fe:	e9 2f       	mov	r30, r25
 700:	e0 61       	ori	r30, 0x10	; 16
 702:	be 2e       	mov	r11, r30
 704:	b4 fe       	sbrs	r11, 4
 706:	0d c0       	rjmp	.+26     	; 0x722 <vfprintf+0x272>
 708:	fb 2d       	mov	r31, r11
 70a:	f4 60       	ori	r31, 0x04	; 4
 70c:	bf 2e       	mov	r11, r31
 70e:	09 c0       	rjmp	.+18     	; 0x722 <vfprintf+0x272>
 710:	34 fe       	sbrs	r3, 4
 712:	0a c0       	rjmp	.+20     	; 0x728 <vfprintf+0x278>
 714:	29 2f       	mov	r18, r25
 716:	26 60       	ori	r18, 0x06	; 6
 718:	b2 2e       	mov	r11, r18
 71a:	06 c0       	rjmp	.+12     	; 0x728 <vfprintf+0x278>
 71c:	28 e0       	ldi	r18, 0x08	; 8
 71e:	30 e0       	ldi	r19, 0x00	; 0
 720:	05 c0       	rjmp	.+10     	; 0x72c <vfprintf+0x27c>
 722:	20 e1       	ldi	r18, 0x10	; 16
 724:	30 e0       	ldi	r19, 0x00	; 0
 726:	02 c0       	rjmp	.+4      	; 0x72c <vfprintf+0x27c>
 728:	20 e1       	ldi	r18, 0x10	; 16
 72a:	32 e0       	ldi	r19, 0x02	; 2
 72c:	f8 01       	movw	r30, r16
 72e:	b7 fe       	sbrs	r11, 7
 730:	07 c0       	rjmp	.+14     	; 0x740 <vfprintf+0x290>
 732:	60 81       	ld	r22, Z
 734:	71 81       	ldd	r23, Z+1	; 0x01
 736:	82 81       	ldd	r24, Z+2	; 0x02
 738:	93 81       	ldd	r25, Z+3	; 0x03
 73a:	0c 5f       	subi	r16, 0xFC	; 252
 73c:	1f 4f       	sbci	r17, 0xFF	; 255
 73e:	06 c0       	rjmp	.+12     	; 0x74c <vfprintf+0x29c>
 740:	60 81       	ld	r22, Z
 742:	71 81       	ldd	r23, Z+1	; 0x01
 744:	80 e0       	ldi	r24, 0x00	; 0
 746:	90 e0       	ldi	r25, 0x00	; 0
 748:	0e 5f       	subi	r16, 0xFE	; 254
 74a:	1f 4f       	sbci	r17, 0xFF	; 255
 74c:	a3 01       	movw	r20, r6
 74e:	0e 94 8b 04 	call	0x916	; 0x916 <__ultoa_invert>
 752:	88 2e       	mov	r8, r24
 754:	86 18       	sub	r8, r6
 756:	fb 2d       	mov	r31, r11
 758:	ff 77       	andi	r31, 0x7F	; 127
 75a:	3f 2e       	mov	r3, r31
 75c:	36 fe       	sbrs	r3, 6
 75e:	0d c0       	rjmp	.+26     	; 0x77a <vfprintf+0x2ca>
 760:	23 2d       	mov	r18, r3
 762:	2e 7f       	andi	r18, 0xFE	; 254
 764:	a2 2e       	mov	r10, r18
 766:	89 14       	cp	r8, r9
 768:	58 f4       	brcc	.+22     	; 0x780 <vfprintf+0x2d0>
 76a:	34 fe       	sbrs	r3, 4
 76c:	0b c0       	rjmp	.+22     	; 0x784 <vfprintf+0x2d4>
 76e:	32 fc       	sbrc	r3, 2
 770:	09 c0       	rjmp	.+18     	; 0x784 <vfprintf+0x2d4>
 772:	83 2d       	mov	r24, r3
 774:	8e 7e       	andi	r24, 0xEE	; 238
 776:	a8 2e       	mov	r10, r24
 778:	05 c0       	rjmp	.+10     	; 0x784 <vfprintf+0x2d4>
 77a:	b8 2c       	mov	r11, r8
 77c:	a3 2c       	mov	r10, r3
 77e:	03 c0       	rjmp	.+6      	; 0x786 <vfprintf+0x2d6>
 780:	b8 2c       	mov	r11, r8
 782:	01 c0       	rjmp	.+2      	; 0x786 <vfprintf+0x2d6>
 784:	b9 2c       	mov	r11, r9
 786:	a4 fe       	sbrs	r10, 4
 788:	0f c0       	rjmp	.+30     	; 0x7a8 <vfprintf+0x2f8>
 78a:	fe 01       	movw	r30, r28
 78c:	e8 0d       	add	r30, r8
 78e:	f1 1d       	adc	r31, r1
 790:	80 81       	ld	r24, Z
 792:	80 33       	cpi	r24, 0x30	; 48
 794:	21 f4       	brne	.+8      	; 0x79e <vfprintf+0x2ee>
 796:	9a 2d       	mov	r25, r10
 798:	99 7e       	andi	r25, 0xE9	; 233
 79a:	a9 2e       	mov	r10, r25
 79c:	09 c0       	rjmp	.+18     	; 0x7b0 <vfprintf+0x300>
 79e:	a2 fe       	sbrs	r10, 2
 7a0:	06 c0       	rjmp	.+12     	; 0x7ae <vfprintf+0x2fe>
 7a2:	b3 94       	inc	r11
 7a4:	b3 94       	inc	r11
 7a6:	04 c0       	rjmp	.+8      	; 0x7b0 <vfprintf+0x300>
 7a8:	8a 2d       	mov	r24, r10
 7aa:	86 78       	andi	r24, 0x86	; 134
 7ac:	09 f0       	breq	.+2      	; 0x7b0 <vfprintf+0x300>
 7ae:	b3 94       	inc	r11
 7b0:	a3 fc       	sbrc	r10, 3
 7b2:	11 c0       	rjmp	.+34     	; 0x7d6 <vfprintf+0x326>
 7b4:	a0 fe       	sbrs	r10, 0
 7b6:	06 c0       	rjmp	.+12     	; 0x7c4 <vfprintf+0x314>
 7b8:	b2 14       	cp	r11, r2
 7ba:	88 f4       	brcc	.+34     	; 0x7de <vfprintf+0x32e>
 7bc:	28 0c       	add	r2, r8
 7be:	92 2c       	mov	r9, r2
 7c0:	9b 18       	sub	r9, r11
 7c2:	0e c0       	rjmp	.+28     	; 0x7e0 <vfprintf+0x330>
 7c4:	b2 14       	cp	r11, r2
 7c6:	60 f4       	brcc	.+24     	; 0x7e0 <vfprintf+0x330>
 7c8:	b6 01       	movw	r22, r12
 7ca:	80 e2       	ldi	r24, 0x20	; 32
 7cc:	90 e0       	ldi	r25, 0x00	; 0
 7ce:	0e 94 4f 04 	call	0x89e	; 0x89e <fputc>
 7d2:	b3 94       	inc	r11
 7d4:	f7 cf       	rjmp	.-18     	; 0x7c4 <vfprintf+0x314>
 7d6:	b2 14       	cp	r11, r2
 7d8:	18 f4       	brcc	.+6      	; 0x7e0 <vfprintf+0x330>
 7da:	2b 18       	sub	r2, r11
 7dc:	02 c0       	rjmp	.+4      	; 0x7e2 <vfprintf+0x332>
 7de:	98 2c       	mov	r9, r8
 7e0:	21 2c       	mov	r2, r1
 7e2:	a4 fe       	sbrs	r10, 4
 7e4:	10 c0       	rjmp	.+32     	; 0x806 <vfprintf+0x356>
 7e6:	b6 01       	movw	r22, r12
 7e8:	80 e3       	ldi	r24, 0x30	; 48
 7ea:	90 e0       	ldi	r25, 0x00	; 0
 7ec:	0e 94 4f 04 	call	0x89e	; 0x89e <fputc>
 7f0:	a2 fe       	sbrs	r10, 2
 7f2:	17 c0       	rjmp	.+46     	; 0x822 <vfprintf+0x372>
 7f4:	a1 fc       	sbrc	r10, 1
 7f6:	03 c0       	rjmp	.+6      	; 0x7fe <vfprintf+0x34e>
 7f8:	88 e7       	ldi	r24, 0x78	; 120
 7fa:	90 e0       	ldi	r25, 0x00	; 0
 7fc:	02 c0       	rjmp	.+4      	; 0x802 <vfprintf+0x352>
 7fe:	88 e5       	ldi	r24, 0x58	; 88
 800:	90 e0       	ldi	r25, 0x00	; 0
 802:	b6 01       	movw	r22, r12
 804:	0c c0       	rjmp	.+24     	; 0x81e <vfprintf+0x36e>
 806:	8a 2d       	mov	r24, r10
 808:	86 78       	andi	r24, 0x86	; 134
 80a:	59 f0       	breq	.+22     	; 0x822 <vfprintf+0x372>
 80c:	a1 fe       	sbrs	r10, 1
 80e:	02 c0       	rjmp	.+4      	; 0x814 <vfprintf+0x364>
 810:	8b e2       	ldi	r24, 0x2B	; 43
 812:	01 c0       	rjmp	.+2      	; 0x816 <vfprintf+0x366>
 814:	80 e2       	ldi	r24, 0x20	; 32
 816:	a7 fc       	sbrc	r10, 7
 818:	8d e2       	ldi	r24, 0x2D	; 45
 81a:	b6 01       	movw	r22, r12
 81c:	90 e0       	ldi	r25, 0x00	; 0
 81e:	0e 94 4f 04 	call	0x89e	; 0x89e <fputc>
 822:	89 14       	cp	r8, r9
 824:	38 f4       	brcc	.+14     	; 0x834 <vfprintf+0x384>
 826:	b6 01       	movw	r22, r12
 828:	80 e3       	ldi	r24, 0x30	; 48
 82a:	90 e0       	ldi	r25, 0x00	; 0
 82c:	0e 94 4f 04 	call	0x89e	; 0x89e <fputc>
 830:	9a 94       	dec	r9
 832:	f7 cf       	rjmp	.-18     	; 0x822 <vfprintf+0x372>
 834:	8a 94       	dec	r8
 836:	f3 01       	movw	r30, r6
 838:	e8 0d       	add	r30, r8
 83a:	f1 1d       	adc	r31, r1
 83c:	80 81       	ld	r24, Z
 83e:	b6 01       	movw	r22, r12
 840:	90 e0       	ldi	r25, 0x00	; 0
 842:	0e 94 4f 04 	call	0x89e	; 0x89e <fputc>
 846:	81 10       	cpse	r8, r1
 848:	f5 cf       	rjmp	.-22     	; 0x834 <vfprintf+0x384>
 84a:	22 20       	and	r2, r2
 84c:	09 f4       	brne	.+2      	; 0x850 <vfprintf+0x3a0>
 84e:	42 ce       	rjmp	.-892    	; 0x4d4 <vfprintf+0x24>
 850:	b6 01       	movw	r22, r12
 852:	80 e2       	ldi	r24, 0x20	; 32
 854:	90 e0       	ldi	r25, 0x00	; 0
 856:	0e 94 4f 04 	call	0x89e	; 0x89e <fputc>
 85a:	2a 94       	dec	r2
 85c:	f6 cf       	rjmp	.-20     	; 0x84a <vfprintf+0x39a>
 85e:	f6 01       	movw	r30, r12
 860:	86 81       	ldd	r24, Z+6	; 0x06
 862:	97 81       	ldd	r25, Z+7	; 0x07
 864:	02 c0       	rjmp	.+4      	; 0x86a <vfprintf+0x3ba>
 866:	8f ef       	ldi	r24, 0xFF	; 255
 868:	9f ef       	ldi	r25, 0xFF	; 255
 86a:	2b 96       	adiw	r28, 0x0b	; 11
 86c:	e2 e1       	ldi	r30, 0x12	; 18
 86e:	0c 94 05 05 	jmp	0xa0a	; 0xa0a <__epilogue_restores__>

00000872 <strnlen_P>:
 872:	fc 01       	movw	r30, r24
 874:	05 90       	lpm	r0, Z+
 876:	61 50       	subi	r22, 0x01	; 1
 878:	70 40       	sbci	r23, 0x00	; 0
 87a:	01 10       	cpse	r0, r1
 87c:	d8 f7       	brcc	.-10     	; 0x874 <strnlen_P+0x2>
 87e:	80 95       	com	r24
 880:	90 95       	com	r25
 882:	8e 0f       	add	r24, r30
 884:	9f 1f       	adc	r25, r31
 886:	08 95       	ret

00000888 <strnlen>:
 888:	fc 01       	movw	r30, r24
 88a:	61 50       	subi	r22, 0x01	; 1
 88c:	70 40       	sbci	r23, 0x00	; 0
 88e:	01 90       	ld	r0, Z+
 890:	01 10       	cpse	r0, r1
 892:	d8 f7       	brcc	.-10     	; 0x88a <strnlen+0x2>
 894:	80 95       	com	r24
 896:	90 95       	com	r25
 898:	8e 0f       	add	r24, r30
 89a:	9f 1f       	adc	r25, r31
 89c:	08 95       	ret

0000089e <fputc>:
 89e:	0f 93       	push	r16
 8a0:	1f 93       	push	r17
 8a2:	cf 93       	push	r28
 8a4:	df 93       	push	r29
 8a6:	fb 01       	movw	r30, r22
 8a8:	23 81       	ldd	r18, Z+3	; 0x03
 8aa:	21 fd       	sbrc	r18, 1
 8ac:	03 c0       	rjmp	.+6      	; 0x8b4 <fputc+0x16>
 8ae:	8f ef       	ldi	r24, 0xFF	; 255
 8b0:	9f ef       	ldi	r25, 0xFF	; 255
 8b2:	2c c0       	rjmp	.+88     	; 0x90c <__stack+0xd>
 8b4:	22 ff       	sbrs	r18, 2
 8b6:	16 c0       	rjmp	.+44     	; 0x8e4 <fputc+0x46>
 8b8:	46 81       	ldd	r20, Z+6	; 0x06
 8ba:	57 81       	ldd	r21, Z+7	; 0x07
 8bc:	24 81       	ldd	r18, Z+4	; 0x04
 8be:	35 81       	ldd	r19, Z+5	; 0x05
 8c0:	42 17       	cp	r20, r18
 8c2:	53 07       	cpc	r21, r19
 8c4:	44 f4       	brge	.+16     	; 0x8d6 <fputc+0x38>
 8c6:	a0 81       	ld	r26, Z
 8c8:	b1 81       	ldd	r27, Z+1	; 0x01
 8ca:	9d 01       	movw	r18, r26
 8cc:	2f 5f       	subi	r18, 0xFF	; 255
 8ce:	3f 4f       	sbci	r19, 0xFF	; 255
 8d0:	31 83       	std	Z+1, r19	; 0x01
 8d2:	20 83       	st	Z, r18
 8d4:	8c 93       	st	X, r24
 8d6:	26 81       	ldd	r18, Z+6	; 0x06
 8d8:	37 81       	ldd	r19, Z+7	; 0x07
 8da:	2f 5f       	subi	r18, 0xFF	; 255
 8dc:	3f 4f       	sbci	r19, 0xFF	; 255
 8de:	37 83       	std	Z+7, r19	; 0x07
 8e0:	26 83       	std	Z+6, r18	; 0x06
 8e2:	14 c0       	rjmp	.+40     	; 0x90c <__stack+0xd>
 8e4:	8b 01       	movw	r16, r22
 8e6:	ec 01       	movw	r28, r24
 8e8:	fb 01       	movw	r30, r22
 8ea:	00 84       	ldd	r0, Z+8	; 0x08
 8ec:	f1 85       	ldd	r31, Z+9	; 0x09
 8ee:	e0 2d       	mov	r30, r0
 8f0:	09 95       	icall
 8f2:	89 2b       	or	r24, r25
 8f4:	e1 f6       	brne	.-72     	; 0x8ae <fputc+0x10>
 8f6:	d8 01       	movw	r26, r16
 8f8:	16 96       	adiw	r26, 0x06	; 6
 8fa:	8d 91       	ld	r24, X+
 8fc:	9c 91       	ld	r25, X
 8fe:	17 97       	sbiw	r26, 0x07	; 7
 900:	01 96       	adiw	r24, 0x01	; 1
 902:	17 96       	adiw	r26, 0x07	; 7
 904:	9c 93       	st	X, r25
 906:	8e 93       	st	-X, r24
 908:	16 97       	sbiw	r26, 0x06	; 6
 90a:	ce 01       	movw	r24, r28
 90c:	df 91       	pop	r29
 90e:	cf 91       	pop	r28
 910:	1f 91       	pop	r17
 912:	0f 91       	pop	r16
 914:	08 95       	ret

00000916 <__ultoa_invert>:
 916:	fa 01       	movw	r30, r20
 918:	aa 27       	eor	r26, r26
 91a:	28 30       	cpi	r18, 0x08	; 8
 91c:	51 f1       	breq	.+84     	; 0x972 <__ultoa_invert+0x5c>
 91e:	20 31       	cpi	r18, 0x10	; 16
 920:	81 f1       	breq	.+96     	; 0x982 <__ultoa_invert+0x6c>
 922:	e8 94       	clt
 924:	6f 93       	push	r22
 926:	6e 7f       	andi	r22, 0xFE	; 254
 928:	6e 5f       	subi	r22, 0xFE	; 254
 92a:	7f 4f       	sbci	r23, 0xFF	; 255
 92c:	8f 4f       	sbci	r24, 0xFF	; 255
 92e:	9f 4f       	sbci	r25, 0xFF	; 255
 930:	af 4f       	sbci	r26, 0xFF	; 255
 932:	b1 e0       	ldi	r27, 0x01	; 1
 934:	3e d0       	rcall	.+124    	; 0x9b2 <__ultoa_invert+0x9c>
 936:	b4 e0       	ldi	r27, 0x04	; 4
 938:	3c d0       	rcall	.+120    	; 0x9b2 <__ultoa_invert+0x9c>
 93a:	67 0f       	add	r22, r23
 93c:	78 1f       	adc	r23, r24
 93e:	89 1f       	adc	r24, r25
 940:	9a 1f       	adc	r25, r26
 942:	a1 1d       	adc	r26, r1
 944:	68 0f       	add	r22, r24
 946:	79 1f       	adc	r23, r25
 948:	8a 1f       	adc	r24, r26
 94a:	91 1d       	adc	r25, r1
 94c:	a1 1d       	adc	r26, r1
 94e:	6a 0f       	add	r22, r26
 950:	71 1d       	adc	r23, r1
 952:	81 1d       	adc	r24, r1
 954:	91 1d       	adc	r25, r1
 956:	a1 1d       	adc	r26, r1
 958:	20 d0       	rcall	.+64     	; 0x99a <__ultoa_invert+0x84>
 95a:	09 f4       	brne	.+2      	; 0x95e <__ultoa_invert+0x48>
 95c:	68 94       	set
 95e:	3f 91       	pop	r19
 960:	2a e0       	ldi	r18, 0x0A	; 10
 962:	26 9f       	mul	r18, r22
 964:	11 24       	eor	r1, r1
 966:	30 19       	sub	r19, r0
 968:	30 5d       	subi	r19, 0xD0	; 208
 96a:	31 93       	st	Z+, r19
 96c:	de f6       	brtc	.-74     	; 0x924 <__ultoa_invert+0xe>
 96e:	cf 01       	movw	r24, r30
 970:	08 95       	ret
 972:	46 2f       	mov	r20, r22
 974:	47 70       	andi	r20, 0x07	; 7
 976:	40 5d       	subi	r20, 0xD0	; 208
 978:	41 93       	st	Z+, r20
 97a:	b3 e0       	ldi	r27, 0x03	; 3
 97c:	0f d0       	rcall	.+30     	; 0x99c <__ultoa_invert+0x86>
 97e:	c9 f7       	brne	.-14     	; 0x972 <__ultoa_invert+0x5c>
 980:	f6 cf       	rjmp	.-20     	; 0x96e <__ultoa_invert+0x58>
 982:	46 2f       	mov	r20, r22
 984:	4f 70       	andi	r20, 0x0F	; 15
 986:	40 5d       	subi	r20, 0xD0	; 208
 988:	4a 33       	cpi	r20, 0x3A	; 58
 98a:	18 f0       	brcs	.+6      	; 0x992 <__ultoa_invert+0x7c>
 98c:	49 5d       	subi	r20, 0xD9	; 217
 98e:	31 fd       	sbrc	r19, 1
 990:	40 52       	subi	r20, 0x20	; 32
 992:	41 93       	st	Z+, r20
 994:	02 d0       	rcall	.+4      	; 0x99a <__ultoa_invert+0x84>
 996:	a9 f7       	brne	.-22     	; 0x982 <__ultoa_invert+0x6c>
 998:	ea cf       	rjmp	.-44     	; 0x96e <__ultoa_invert+0x58>
 99a:	b4 e0       	ldi	r27, 0x04	; 4
 99c:	a6 95       	lsr	r26
 99e:	97 95       	ror	r25
 9a0:	87 95       	ror	r24
 9a2:	77 95       	ror	r23
 9a4:	67 95       	ror	r22
 9a6:	ba 95       	dec	r27
 9a8:	c9 f7       	brne	.-14     	; 0x99c <__ultoa_invert+0x86>
 9aa:	00 97       	sbiw	r24, 0x00	; 0
 9ac:	61 05       	cpc	r22, r1
 9ae:	71 05       	cpc	r23, r1
 9b0:	08 95       	ret
 9b2:	9b 01       	movw	r18, r22
 9b4:	ac 01       	movw	r20, r24
 9b6:	0a 2e       	mov	r0, r26
 9b8:	06 94       	lsr	r0
 9ba:	57 95       	ror	r21
 9bc:	47 95       	ror	r20
 9be:	37 95       	ror	r19
 9c0:	27 95       	ror	r18
 9c2:	ba 95       	dec	r27
 9c4:	c9 f7       	brne	.-14     	; 0x9b8 <__ultoa_invert+0xa2>
 9c6:	62 0f       	add	r22, r18
 9c8:	73 1f       	adc	r23, r19
 9ca:	84 1f       	adc	r24, r20
 9cc:	95 1f       	adc	r25, r21
 9ce:	a0 1d       	adc	r26, r0
 9d0:	08 95       	ret

000009d2 <__prologue_saves__>:
 9d2:	2f 92       	push	r2
 9d4:	3f 92       	push	r3
 9d6:	4f 92       	push	r4
 9d8:	5f 92       	push	r5
 9da:	6f 92       	push	r6
 9dc:	7f 92       	push	r7
 9de:	8f 92       	push	r8
 9e0:	9f 92       	push	r9
 9e2:	af 92       	push	r10
 9e4:	bf 92       	push	r11
 9e6:	cf 92       	push	r12
 9e8:	df 92       	push	r13
 9ea:	ef 92       	push	r14
 9ec:	ff 92       	push	r15
 9ee:	0f 93       	push	r16
 9f0:	1f 93       	push	r17
 9f2:	cf 93       	push	r28
 9f4:	df 93       	push	r29
 9f6:	cd b7       	in	r28, 0x3d	; 61
 9f8:	de b7       	in	r29, 0x3e	; 62
 9fa:	ca 1b       	sub	r28, r26
 9fc:	db 0b       	sbc	r29, r27
 9fe:	0f b6       	in	r0, 0x3f	; 63
 a00:	f8 94       	cli
 a02:	de bf       	out	0x3e, r29	; 62
 a04:	0f be       	out	0x3f, r0	; 63
 a06:	cd bf       	out	0x3d, r28	; 61
 a08:	09 94       	ijmp

00000a0a <__epilogue_restores__>:
 a0a:	2a 88       	ldd	r2, Y+18	; 0x12
 a0c:	39 88       	ldd	r3, Y+17	; 0x11
 a0e:	48 88       	ldd	r4, Y+16	; 0x10
 a10:	5f 84       	ldd	r5, Y+15	; 0x0f
 a12:	6e 84       	ldd	r6, Y+14	; 0x0e
 a14:	7d 84       	ldd	r7, Y+13	; 0x0d
 a16:	8c 84       	ldd	r8, Y+12	; 0x0c
 a18:	9b 84       	ldd	r9, Y+11	; 0x0b
 a1a:	aa 84       	ldd	r10, Y+10	; 0x0a
 a1c:	b9 84       	ldd	r11, Y+9	; 0x09
 a1e:	c8 84       	ldd	r12, Y+8	; 0x08
 a20:	df 80       	ldd	r13, Y+7	; 0x07
 a22:	ee 80       	ldd	r14, Y+6	; 0x06
 a24:	fd 80       	ldd	r15, Y+5	; 0x05
 a26:	0c 81       	ldd	r16, Y+4	; 0x04
 a28:	1b 81       	ldd	r17, Y+3	; 0x03
 a2a:	aa 81       	ldd	r26, Y+2	; 0x02
 a2c:	b9 81       	ldd	r27, Y+1	; 0x01
 a2e:	ce 0f       	add	r28, r30
 a30:	d1 1d       	adc	r29, r1
 a32:	0f b6       	in	r0, 0x3f	; 63
 a34:	f8 94       	cli
 a36:	de bf       	out	0x3e, r29	; 62
 a38:	0f be       	out	0x3f, r0	; 63
 a3a:	cd bf       	out	0x3d, r28	; 61
 a3c:	ed 01       	movw	r28, r26
 a3e:	08 95       	ret

00000a40 <_exit>:
 a40:	f8 94       	cli

00000a42 <__stop_program>:
 a42:	ff cf       	rjmp	.-2      	; 0xa42 <__stop_program>
