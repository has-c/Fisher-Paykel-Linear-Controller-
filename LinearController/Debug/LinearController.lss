
LinearController.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000001e  00800100  00000c92  00000d26  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000c92  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000758  0080011e  0080011e  00000d44  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000d44  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000da0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000140  00000000  00000000  00000de0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002396  00000000  00000000  00000f20  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000ac7  00000000  00000000  000032b6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000e8f  00000000  00000000  00003d7d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000394  00000000  00000000  00004c0c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000090e  00000000  00000000  00004fa0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000c3d  00000000  00000000  000058ae  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000100  00000000  00000000  000064eb  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 d7 01 	jmp	0x3ae	; 0x3ae <__vector_11>
  30:	0c 94 85 01 	jmp	0x30a	; 0x30a <__vector_12>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 2a 01 	jmp	0x254	; 0x254 <__vector_18>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 6d 01 	jmp	0x2da	; 0x2da <__vector_20>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e2 e9       	ldi	r30, 0x92	; 146
  7c:	fc e0       	ldi	r31, 0x0C	; 12
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	ae 31       	cpi	r26, 0x1E	; 30
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	28 e0       	ldi	r18, 0x08	; 8
  8c:	ae e1       	ldi	r26, 0x1E	; 30
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a6 37       	cpi	r26, 0x76	; 118
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <main>
  9e:	0c 94 47 06 	jmp	0xc8e	; 0xc8e <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <ADC_Init>:
  a6:	ec e7       	ldi	r30, 0x7C	; 124
  a8:	f0 e0       	ldi	r31, 0x00	; 0
  aa:	80 81       	ld	r24, Z
  ac:	8f 77       	andi	r24, 0x7F	; 127
  ae:	80 83       	st	Z, r24
  b0:	80 81       	ld	r24, Z
  b2:	8f 7b       	andi	r24, 0xBF	; 191
  b4:	80 83       	st	Z, r24
  b6:	ea e7       	ldi	r30, 0x7A	; 122
  b8:	f0 e0       	ldi	r31, 0x00	; 0
  ba:	80 81       	ld	r24, Z
  bc:	85 68       	ori	r24, 0x85	; 133
  be:	80 83       	st	Z, r24
  c0:	08 95       	ret

000000c2 <ADC_Read>:
  c2:	ea e7       	ldi	r30, 0x7A	; 122
  c4:	f0 e0       	ldi	r31, 0x00	; 0
  c6:	80 81       	ld	r24, Z
  c8:	88 23       	and	r24, r24
  ca:	e9 f3       	breq	.-6      	; 0xc6 <ADC_Read+0x4>
  cc:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
  d0:	70 91 79 00 	lds	r23, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
  d4:	80 e0       	ldi	r24, 0x00	; 0
  d6:	90 e0       	ldi	r25, 0x00	; 0
  d8:	08 95       	ret

000000da <ADC_Calculate>:
  da:	0f 93       	push	r16
  dc:	1f 93       	push	r17
  de:	0e 94 61 00 	call	0xc2	; 0xc2 <ADC_Read>
  e2:	9b 01       	movw	r18, r22
  e4:	ac 01       	movw	r20, r24
  e6:	a8 ee       	ldi	r26, 0xE8	; 232
  e8:	b3 e0       	ldi	r27, 0x03	; 3
  ea:	0e 94 5e 03 	call	0x6bc	; 0x6bc <__muluhisi3>
  ee:	dc 01       	movw	r26, r24
  f0:	cb 01       	movw	r24, r22
  f2:	07 2e       	mov	r0, r23
  f4:	7a e0       	ldi	r23, 0x0A	; 10
  f6:	b6 95       	lsr	r27
  f8:	a7 95       	ror	r26
  fa:	97 95       	ror	r25
  fc:	87 95       	ror	r24
  fe:	7a 95       	dec	r23
 100:	d1 f7       	brne	.-12     	; 0xf6 <ADC_Calculate+0x1c>
 102:	70 2d       	mov	r23, r0
 104:	8c 01       	movw	r16, r24
 106:	9d 01       	movw	r18, r26
 108:	00 0f       	add	r16, r16
 10a:	11 1f       	adc	r17, r17
 10c:	22 1f       	adc	r18, r18
 10e:	33 1f       	adc	r19, r19
 110:	00 0f       	add	r16, r16
 112:	11 1f       	adc	r17, r17
 114:	22 1f       	adc	r18, r18
 116:	33 1f       	adc	r19, r19
 118:	bc 01       	movw	r22, r24
 11a:	cd 01       	movw	r24, r26
 11c:	60 0f       	add	r22, r16
 11e:	71 1f       	adc	r23, r17
 120:	82 1f       	adc	r24, r18
 122:	93 1f       	adc	r25, r19
 124:	1f 91       	pop	r17
 126:	0f 91       	pop	r16
 128:	08 95       	ret

0000012a <ADC_LHSVoltage>:
 12a:	ec e7       	ldi	r30, 0x7C	; 124
 12c:	f0 e0       	ldi	r31, 0x00	; 0
 12e:	80 81       	ld	r24, Z
 130:	80 7f       	andi	r24, 0xF0	; 240
 132:	80 83       	st	Z, r24
 134:	ea e7       	ldi	r30, 0x7A	; 122
 136:	f0 e0       	ldi	r31, 0x00	; 0
 138:	80 81       	ld	r24, Z
 13a:	80 64       	ori	r24, 0x40	; 64
 13c:	80 83       	st	Z, r24
 13e:	0e 94 6d 00 	call	0xda	; 0xda <ADC_Calculate>
 142:	9b 01       	movw	r18, r22
 144:	ac 01       	movw	r20, r24
 146:	ab e1       	ldi	r26, 0x1B	; 27
 148:	b0 e0       	ldi	r27, 0x00	; 0
 14a:	0e 94 5e 03 	call	0x6bc	; 0x6bc <__muluhisi3>
 14e:	24 e6       	ldi	r18, 0x64	; 100
 150:	30 e0       	ldi	r19, 0x00	; 0
 152:	40 e0       	ldi	r20, 0x00	; 0
 154:	50 e0       	ldi	r21, 0x00	; 0
 156:	0e 94 2d 03 	call	0x65a	; 0x65a <__udivmodsi4>
 15a:	ca 01       	movw	r24, r20
 15c:	b9 01       	movw	r22, r18
 15e:	08 95       	ret

00000160 <ADC_RHSVoltage>:
 160:	ec e7       	ldi	r30, 0x7C	; 124
 162:	f0 e0       	ldi	r31, 0x00	; 0
 164:	80 81       	ld	r24, Z
 166:	81 7f       	andi	r24, 0xF1	; 241
 168:	80 83       	st	Z, r24
 16a:	80 81       	ld	r24, Z
 16c:	81 60       	ori	r24, 0x01	; 1
 16e:	80 83       	st	Z, r24
 170:	ea e7       	ldi	r30, 0x7A	; 122
 172:	f0 e0       	ldi	r31, 0x00	; 0
 174:	80 81       	ld	r24, Z
 176:	80 64       	ori	r24, 0x40	; 64
 178:	80 83       	st	Z, r24
 17a:	0e 94 6d 00 	call	0xda	; 0xda <ADC_Calculate>
 17e:	9b 01       	movw	r18, r22
 180:	ac 01       	movw	r20, r24
 182:	ab e1       	ldi	r26, 0x1B	; 27
 184:	b0 e0       	ldi	r27, 0x00	; 0
 186:	0e 94 5e 03 	call	0x6bc	; 0x6bc <__muluhisi3>
 18a:	24 e6       	ldi	r18, 0x64	; 100
 18c:	30 e0       	ldi	r19, 0x00	; 0
 18e:	40 e0       	ldi	r20, 0x00	; 0
 190:	50 e0       	ldi	r21, 0x00	; 0
 192:	0e 94 2d 03 	call	0x65a	; 0x65a <__udivmodsi4>
 196:	ca 01       	movw	r24, r20
 198:	b9 01       	movw	r22, r18
 19a:	08 95       	ret

0000019c <PWM_Init>:

#include "pwm.h"

//to do setup in the Fast PWM mode
void PWM_Init(){
	TCCR1B |= (1<<WGM12)|(1<<CS11)|(1<<CS10);//CTC mode and no prescaler
 19c:	e1 e8       	ldi	r30, 0x81	; 129
 19e:	f0 e0       	ldi	r31, 0x00	; 0
 1a0:	80 81       	ld	r24, Z
 1a2:	8b 60       	ori	r24, 0x0B	; 11
 1a4:	80 83       	st	Z, r24
	TIMSK1 |= (1<<OCIE1A)|(1<<OCIE1B); //Enabling interrupts for match on OCR1A and OCR1B
 1a6:	ef e6       	ldi	r30, 0x6F	; 111
 1a8:	f0 e0       	ldi	r31, 0x00	; 0
 1aa:	80 81       	ld	r24, Z
 1ac:	86 60       	ori	r24, 0x06	; 6
 1ae:	80 83       	st	Z, r24
 1b0:	08 95       	ret

000001b2 <PWM_Change>:
	
}

void PWM_Change(uint16_t topValue, uint16_t bottomValue){
	OCR1A = topValue;
 1b2:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 1b6:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
	OCR1B = bottomValue;
 1ba:	70 93 8b 00 	sts	0x008B, r23	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
 1be:	60 93 8a 00 	sts	0x008A, r22	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
 1c2:	08 95       	ret

000001c4 <UART_Init>:
		}
	}
	//after message is parsed empty the array, reset the numbers
	memset(receiveBuffer, 0, sizeof(receiveBuffer)); //clear the array to 0
	reverseCurlyBracketCount = 0;
	messageReceived = false;
 1c4:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
 1c8:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
 1cc:	e1 ec       	ldi	r30, 0xC1	; 193
 1ce:	f0 e0       	ldi	r31, 0x00	; 0
 1d0:	80 e9       	ldi	r24, 0x90	; 144
 1d2:	80 83       	st	Z, r24
 1d4:	80 81       	ld	r24, Z
 1d6:	88 64       	ori	r24, 0x48	; 72
 1d8:	80 83       	st	Z, r24
 1da:	86 e0       	ldi	r24, 0x06	; 6
 1dc:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
 1e0:	08 95       	ret

000001e2 <UART_Transmit>:
}

//
void UART_Transmit(uint8_t myValue){
	//disable receive
	UCSR0B &= ~(1 << RXEN0);
 1e2:	e1 ec       	ldi	r30, 0xC1	; 193
 1e4:	f0 e0       	ldi	r31, 0x00	; 0
 1e6:	90 81       	ld	r25, Z
 1e8:	9f 7e       	andi	r25, 0xEF	; 239
 1ea:	90 83       	st	Z, r25
	UCSR0B &= ~(1 << RXCIE0);
 1ec:	90 81       	ld	r25, Z
 1ee:	9f 77       	andi	r25, 0x7F	; 127
 1f0:	90 83       	st	Z, r25
	while (!((1<<UDRE0)&&(UCSR0A))); //wait until the transmit register is ready
 1f2:	e0 ec       	ldi	r30, 0xC0	; 192
 1f4:	f0 e0       	ldi	r31, 0x00	; 0
 1f6:	90 81       	ld	r25, Z
 1f8:	99 23       	and	r25, r25
 1fa:	e9 f3       	breq	.-6      	; 0x1f6 <UART_Transmit+0x14>
	UDR0 = myValue;//once ready, store next value for transmission
 1fc:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 200:	08 95       	ret

00000202 <usart_putchar_printf>:
}

uint8_t ASCIIConversion(uint8_t value){
	uint8_t asciiValue = value + 48;
	return asciiValue;
}
 202:	cf 93       	push	r28
 204:	c8 2f       	mov	r28, r24
 206:	8a 30       	cpi	r24, 0x0A	; 10
 208:	19 f4       	brne	.+6      	; 0x210 <usart_putchar_printf+0xe>
 20a:	8d e0       	ldi	r24, 0x0D	; 13
 20c:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <UART_Transmit>
 210:	8c 2f       	mov	r24, r28
 212:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <UART_Transmit>
 216:	80 e0       	ldi	r24, 0x00	; 0
 218:	90 e0       	ldi	r25, 0x00	; 0
 21a:	cf 91       	pop	r28
 21c:	08 95       	ret

0000021e <concatenate>:
 21e:	c0 97       	sbiw	r24, 0x30	; 48
 220:	e4 e6       	ldi	r30, 0x64	; 100
 222:	e8 9f       	mul	r30, r24
 224:	90 01       	movw	r18, r0
 226:	e9 9f       	mul	r30, r25
 228:	30 0d       	add	r19, r0
 22a:	11 24       	eor	r1, r1
 22c:	60 53       	subi	r22, 0x30	; 48
 22e:	71 09       	sbc	r23, r1
 230:	cb 01       	movw	r24, r22
 232:	88 0f       	add	r24, r24
 234:	99 1f       	adc	r25, r25
 236:	66 0f       	add	r22, r22
 238:	77 1f       	adc	r23, r23
 23a:	66 0f       	add	r22, r22
 23c:	77 1f       	adc	r23, r23
 23e:	66 0f       	add	r22, r22
 240:	77 1f       	adc	r23, r23
 242:	68 0f       	add	r22, r24
 244:	79 1f       	adc	r23, r25
 246:	62 0f       	add	r22, r18
 248:	73 1f       	adc	r23, r19
 24a:	ca 01       	movw	r24, r20
 24c:	c0 97       	sbiw	r24, 0x30	; 48
 24e:	86 0f       	add	r24, r22
 250:	97 1f       	adc	r25, r23
 252:	08 95       	ret

00000254 <__vector_18>:
 254:	1f 92       	push	r1
 256:	0f 92       	push	r0
 258:	0f b6       	in	r0, 0x3f	; 63
 25a:	0f 92       	push	r0
 25c:	11 24       	eor	r1, r1
 25e:	8f 93       	push	r24
 260:	9f 93       	push	r25
 262:	ef 93       	push	r30
 264:	ff 93       	push	r31
 266:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 26a:	80 93 6f 08 	sts	0x086F, r24	; 0x80086f <received>
 26e:	80 91 4b 01 	lds	r24, 0x014B	; 0x80014b <rx_count>
 272:	90 91 4c 01 	lds	r25, 0x014C	; 0x80014c <rx_count+0x1>
 276:	01 96       	adiw	r24, 0x01	; 1
 278:	90 93 4c 01 	sts	0x014C, r25	; 0x80014c <rx_count+0x1>
 27c:	80 93 4b 01 	sts	0x014B, r24	; 0x80014b <rx_count>
 280:	80 91 4b 01 	lds	r24, 0x014B	; 0x80014b <rx_count>
 284:	90 91 4c 01 	lds	r25, 0x014C	; 0x80014c <rx_count+0x1>
 288:	45 97       	sbiw	r24, 0x15	; 21
 28a:	4c f0       	brlt	.+18     	; 0x29e <__vector_18+0x4a>
 28c:	e0 91 4b 01 	lds	r30, 0x014B	; 0x80014b <rx_count>
 290:	f0 91 4c 01 	lds	r31, 0x014C	; 0x80014c <rx_count+0x1>
 294:	80 91 6f 08 	lds	r24, 0x086F	; 0x80086f <received>
 298:	e2 5f       	subi	r30, 0xF2	; 242
 29a:	fe 4f       	sbci	r31, 0xFE	; 254
 29c:	80 83       	st	Z, r24
 29e:	80 91 4b 01 	lds	r24, 0x014B	; 0x80014b <rx_count>
 2a2:	90 91 4c 01 	lds	r25, 0x014C	; 0x80014c <rx_count+0x1>
 2a6:	86 97       	sbiw	r24, 0x26	; 38
 2a8:	7c f0       	brlt	.+30     	; 0x2c8 <__vector_18+0x74>
 2aa:	e1 ec       	ldi	r30, 0xC1	; 193
 2ac:	f0 e0       	ldi	r31, 0x00	; 0
 2ae:	80 81       	ld	r24, Z
 2b0:	8f 77       	andi	r24, 0x7F	; 127
 2b2:	80 83       	st	Z, r24
 2b4:	80 81       	ld	r24, Z
 2b6:	8f 7e       	andi	r24, 0xEF	; 239
 2b8:	80 83       	st	Z, r24
 2ba:	81 e0       	ldi	r24, 0x01	; 1
 2bc:	80 93 4d 01 	sts	0x014D, r24	; 0x80014d <finished>
 2c0:	10 92 4c 01 	sts	0x014C, r1	; 0x80014c <rx_count+0x1>
 2c4:	10 92 4b 01 	sts	0x014B, r1	; 0x80014b <rx_count>
 2c8:	ff 91       	pop	r31
 2ca:	ef 91       	pop	r30
 2cc:	9f 91       	pop	r25
 2ce:	8f 91       	pop	r24
 2d0:	0f 90       	pop	r0
 2d2:	0f be       	out	0x3f, r0	; 63
 2d4:	0f 90       	pop	r0
 2d6:	1f 90       	pop	r1
 2d8:	18 95       	reti

000002da <__vector_20>:
 2da:	1f 92       	push	r1
 2dc:	0f 92       	push	r0
 2de:	0f b6       	in	r0, 0x3f	; 63
 2e0:	0f 92       	push	r0
 2e2:	11 24       	eor	r1, r1
 2e4:	8f 93       	push	r24
 2e6:	ef 93       	push	r30
 2e8:	ff 93       	push	r31
 2ea:	e1 ec       	ldi	r30, 0xC1	; 193
 2ec:	f0 e0       	ldi	r31, 0x00	; 0
 2ee:	80 81       	ld	r24, Z
 2f0:	80 61       	ori	r24, 0x10	; 16
 2f2:	80 83       	st	Z, r24
 2f4:	80 81       	ld	r24, Z
 2f6:	80 68       	ori	r24, 0x80	; 128
 2f8:	80 83       	st	Z, r24
 2fa:	ff 91       	pop	r31
 2fc:	ef 91       	pop	r30
 2fe:	8f 91       	pop	r24
 300:	0f 90       	pop	r0
 302:	0f be       	out	0x3f, r0	; 63
 304:	0f 90       	pop	r0
 306:	1f 90       	pop	r1
 308:	18 95       	reti

0000030a <__vector_12>:
 30a:	1f 92       	push	r1
 30c:	0f 92       	push	r0
 30e:	0f b6       	in	r0, 0x3f	; 63
 310:	0f 92       	push	r0
 312:	11 24       	eor	r1, r1
 314:	8f 93       	push	r24
 316:	9f 93       	push	r25
 318:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <isLHS>
 31c:	81 11       	cpse	r24, r1
 31e:	04 c0       	rjmp	.+8      	; 0x328 <__vector_12+0x1e>
 320:	80 91 13 01 	lds	r24, 0x0113	; 0x800113 <lowPowerMode>
 324:	88 23       	and	r24, r24
 326:	51 f0       	breq	.+20     	; 0x33c <__vector_12+0x32>
 328:	80 91 4f 01 	lds	r24, 0x014F	; 0x80014f <isDead>
 32c:	90 91 50 01 	lds	r25, 0x0150	; 0x800150 <count>
 330:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <noOfWaves>
 334:	89 17       	cp	r24, r25
 336:	58 f0       	brcs	.+22     	; 0x34e <__vector_12+0x44>
 338:	2a 98       	cbi	0x05, 2	; 5
 33a:	09 c0       	rjmp	.+18     	; 0x34e <__vector_12+0x44>
 33c:	80 91 4f 01 	lds	r24, 0x014F	; 0x80014f <isDead>
 340:	90 91 50 01 	lds	r25, 0x0150	; 0x800150 <count>
 344:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <noOfWaves>
 348:	89 17       	cp	r24, r25
 34a:	08 f0       	brcs	.+2      	; 0x34e <__vector_12+0x44>
 34c:	29 98       	cbi	0x05, 1	; 5
 34e:	9f 91       	pop	r25
 350:	8f 91       	pop	r24
 352:	0f 90       	pop	r0
 354:	0f be       	out	0x3f, r0	; 63
 356:	0f 90       	pop	r0
 358:	1f 90       	pop	r1
 35a:	18 95       	reti

0000035c <ConvertTimerValueToDutyCycle>:
 35c:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <dutyCycle>
 360:	90 91 0f 01 	lds	r25, 0x010F	; 0x80010f <dutyCycle+0x1>
 364:	4d e7       	ldi	r20, 0x7D	; 125
 366:	48 9f       	mul	r20, r24
 368:	90 01       	movw	r18, r0
 36a:	49 9f       	mul	r20, r25
 36c:	30 0d       	add	r19, r0
 36e:	11 24       	eor	r1, r1
 370:	36 95       	lsr	r19
 372:	27 95       	ror	r18
 374:	36 95       	lsr	r19
 376:	27 95       	ror	r18
 378:	ab e7       	ldi	r26, 0x7B	; 123
 37a:	b4 e1       	ldi	r27, 0x14	; 20
 37c:	0e 94 4f 03 	call	0x69e	; 0x69e <__umulhisi3>
 380:	96 95       	lsr	r25
 382:	87 95       	ror	r24
 384:	08 95       	ret

00000386 <CalculateDeadTime>:
 386:	60 91 11 01 	lds	r22, 0x0111	; 0x800111 <frequency>
 38a:	70 91 12 01 	lds	r23, 0x0112	; 0x800112 <frequency+0x1>
 38e:	20 91 10 01 	lds	r18, 0x0110	; 0x800110 <noOfWaves>
 392:	88 e8       	ldi	r24, 0x88	; 136
 394:	93 e1       	ldi	r25, 0x13	; 19
 396:	0e 94 19 03 	call	0x632	; 0x632 <__udivmodhi4>
 39a:	62 1b       	sub	r22, r18
 39c:	71 09       	sbc	r23, r1
 39e:	8d e7       	ldi	r24, 0x7D	; 125
 3a0:	28 2f       	mov	r18, r24
 3a2:	26 9f       	mul	r18, r22
 3a4:	c0 01       	movw	r24, r0
 3a6:	27 9f       	mul	r18, r23
 3a8:	90 0d       	add	r25, r0
 3aa:	11 24       	eor	r1, r1
 3ac:	08 95       	ret

000003ae <__vector_11>:
 3ae:	1f 92       	push	r1
 3b0:	0f 92       	push	r0
 3b2:	0f b6       	in	r0, 0x3f	; 63
 3b4:	0f 92       	push	r0
 3b6:	11 24       	eor	r1, r1
 3b8:	2f 93       	push	r18
 3ba:	3f 93       	push	r19
 3bc:	4f 93       	push	r20
 3be:	5f 93       	push	r21
 3c0:	6f 93       	push	r22
 3c2:	7f 93       	push	r23
 3c4:	8f 93       	push	r24
 3c6:	9f 93       	push	r25
 3c8:	af 93       	push	r26
 3ca:	bf 93       	push	r27
 3cc:	ef 93       	push	r30
 3ce:	ff 93       	push	r31
 3d0:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <isLHS>
 3d4:	81 11       	cpse	r24, r1
 3d6:	04 c0       	rjmp	.+8      	; 0x3e0 <__vector_11+0x32>
 3d8:	80 91 13 01 	lds	r24, 0x0113	; 0x800113 <lowPowerMode>
 3dc:	88 23       	and	r24, r24
 3de:	b9 f1       	breq	.+110    	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
 3e0:	90 91 50 01 	lds	r25, 0x0150	; 0x800150 <count>
 3e4:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <noOfWaves>
 3e8:	89 17       	cp	r24, r25
 3ea:	60 f0       	brcs	.+24     	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
 3ec:	80 91 4f 01 	lds	r24, 0x014F	; 0x80014f <isDead>
 3f0:	81 11       	cpse	r24, r1
 3f2:	08 c0       	rjmp	.+16     	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
 3f4:	2a 9a       	sbi	0x05, 2	; 5
 3f6:	5d 9a       	sbi	0x0b, 5	; 11
 3f8:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <count>
 3fc:	8f 5f       	subi	r24, 0xFF	; 255
 3fe:	80 93 50 01 	sts	0x0150, r24	; 0x800150 <count>
 402:	57 c0       	rjmp	.+174    	; 0x4b2 <__LOCK_REGION_LENGTH__+0xb2>
 404:	90 91 50 01 	lds	r25, 0x0150	; 0x800150 <count>
 408:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <noOfWaves>
 40c:	89 17       	cp	r24, r25
 40e:	a0 f4       	brcc	.+40     	; 0x438 <__LOCK_REGION_LENGTH__+0x38>
 410:	5d 98       	cbi	0x0b, 5	; 11
 412:	2a 98       	cbi	0x05, 2	; 5
 414:	0e 94 c3 01 	call	0x386	; 0x386 <CalculateDeadTime>
 418:	6f ef       	ldi	r22, 0xFF	; 255
 41a:	7f ef       	ldi	r23, 0xFF	; 255
 41c:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <PWM_Change>
 420:	80 91 13 01 	lds	r24, 0x0113	; 0x800113 <lowPowerMode>
 424:	81 11       	cpse	r24, r1
 426:	02 c0       	rjmp	.+4      	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
 428:	10 92 14 01 	sts	0x0114, r1	; 0x800114 <isLHS>
 42c:	10 92 50 01 	sts	0x0150, r1	; 0x800150 <count>
 430:	81 e0       	ldi	r24, 0x01	; 1
 432:	80 93 4f 01 	sts	0x014F, r24	; 0x80014f <isDead>
 436:	3d c0       	rjmp	.+122    	; 0x4b2 <__LOCK_REGION_LENGTH__+0xb2>
 438:	10 92 4f 01 	sts	0x014F, r1	; 0x80014f <isDead>
 43c:	0e 94 ae 01 	call	0x35c	; 0x35c <ConvertTimerValueToDutyCycle>
 440:	68 2f       	mov	r22, r24
 442:	70 e0       	ldi	r23, 0x00	; 0
 444:	8d e7       	ldi	r24, 0x7D	; 125
 446:	90 e0       	ldi	r25, 0x00	; 0
 448:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <PWM_Change>
 44c:	32 c0       	rjmp	.+100    	; 0x4b2 <__LOCK_REGION_LENGTH__+0xb2>
 44e:	90 91 50 01 	lds	r25, 0x0150	; 0x800150 <count>
 452:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <noOfWaves>
 456:	89 17       	cp	r24, r25
 458:	60 f0       	brcs	.+24     	; 0x472 <__LOCK_REGION_LENGTH__+0x72>
 45a:	80 91 4f 01 	lds	r24, 0x014F	; 0x80014f <isDead>
 45e:	81 11       	cpse	r24, r1
 460:	08 c0       	rjmp	.+16     	; 0x472 <__LOCK_REGION_LENGTH__+0x72>
 462:	5e 9a       	sbi	0x0b, 6	; 11
 464:	29 9a       	sbi	0x05, 1	; 5
 466:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <count>
 46a:	8f 5f       	subi	r24, 0xFF	; 255
 46c:	80 93 50 01 	sts	0x0150, r24	; 0x800150 <count>
 470:	20 c0       	rjmp	.+64     	; 0x4b2 <__LOCK_REGION_LENGTH__+0xb2>
 472:	90 91 50 01 	lds	r25, 0x0150	; 0x800150 <count>
 476:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <noOfWaves>
 47a:	89 17       	cp	r24, r25
 47c:	80 f4       	brcc	.+32     	; 0x49e <__LOCK_REGION_LENGTH__+0x9e>
 47e:	5e 98       	cbi	0x0b, 6	; 11
 480:	29 98       	cbi	0x05, 1	; 5
 482:	0e 94 c3 01 	call	0x386	; 0x386 <CalculateDeadTime>
 486:	6f ef       	ldi	r22, 0xFF	; 255
 488:	7f ef       	ldi	r23, 0xFF	; 255
 48a:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <PWM_Change>
 48e:	81 e0       	ldi	r24, 0x01	; 1
 490:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <isLHS>
 494:	10 92 50 01 	sts	0x0150, r1	; 0x800150 <count>
 498:	80 93 4f 01 	sts	0x014F, r24	; 0x80014f <isDead>
 49c:	0a c0       	rjmp	.+20     	; 0x4b2 <__LOCK_REGION_LENGTH__+0xb2>
 49e:	10 92 4f 01 	sts	0x014F, r1	; 0x80014f <isDead>
 4a2:	0e 94 ae 01 	call	0x35c	; 0x35c <ConvertTimerValueToDutyCycle>
 4a6:	68 2f       	mov	r22, r24
 4a8:	70 e0       	ldi	r23, 0x00	; 0
 4aa:	8d e7       	ldi	r24, 0x7D	; 125
 4ac:	90 e0       	ldi	r25, 0x00	; 0
 4ae:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <PWM_Change>
 4b2:	ff 91       	pop	r31
 4b4:	ef 91       	pop	r30
 4b6:	bf 91       	pop	r27
 4b8:	af 91       	pop	r26
 4ba:	9f 91       	pop	r25
 4bc:	8f 91       	pop	r24
 4be:	7f 91       	pop	r23
 4c0:	6f 91       	pop	r22
 4c2:	5f 91       	pop	r21
 4c4:	4f 91       	pop	r20
 4c6:	3f 91       	pop	r19
 4c8:	2f 91       	pop	r18
 4ca:	0f 90       	pop	r0
 4cc:	0f be       	out	0x3f, r0	; 63
 4ce:	0f 90       	pop	r0
 4d0:	1f 90       	pop	r1
 4d2:	18 95       	reti

000004d4 <main>:

int main(void)
{	
	stdout= &mystdout;//printf
 4d4:	80 e0       	ldi	r24, 0x00	; 0
 4d6:	91 e0       	ldi	r25, 0x01	; 1
 4d8:	90 93 73 08 	sts	0x0873, r25	; 0x800873 <__iob+0x3>
 4dc:	80 93 72 08 	sts	0x0872, r24	; 0x800872 <__iob+0x2>

    sei();
 4e0:	78 94       	sei
	UART_Init(UBRR_VALUE);
 4e2:	83 e3       	ldi	r24, 0x33	; 51
 4e4:	90 e0       	ldi	r25, 0x00	; 0
 4e6:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <UART_Init>
	ADC_Init();
 4ea:	0e 94 53 00 	call	0xa6	; 0xa6 <ADC_Init>
	PWM_Init();
 4ee:	0e 94 ce 00 	call	0x19c	; 0x19c <PWM_Init>
	
	//output pin setup
	DDRB |= (1<<PB1)|(1<<PB2);
 4f2:	84 b1       	in	r24, 0x04	; 4
 4f4:	86 60       	ori	r24, 0x06	; 6
 4f6:	84 b9       	out	0x04, r24	; 4
	DDRD |= (1<<PD5)|(1<<PD6);
 4f8:	8a b1       	in	r24, 0x0a	; 10
 4fa:	80 66       	ori	r24, 0x60	; 96
 4fc:	8a b9       	out	0x0a, r24	; 10
		uint32_t rmsCurrent = 0;
		uint32_t powerArray[NUMBER_OF_SAMPLES] = {0};
		
		//receive message code
		if(finished){
			pumpParam = concatenate(pumpingEffortArray[0],pumpingEffortArray[1],pumpingEffortArray[2]);
 4fe:	0f 2e       	mov	r0, r31
 500:	f3 e2       	ldi	r31, 0x23	; 35
 502:	ef 2e       	mov	r14, r31
 504:	f1 e0       	ldi	r31, 0x01	; 1
 506:	ff 2e       	mov	r15, r31
 508:	f0 2d       	mov	r31, r0
		//get voltage values
		while(voltageLHSIndex < NUMBER_OF_SAMPLES){
			voltageLHS[voltageLHSIndex] = ADC_LHSVoltage();
			voltageRHS[voltageLHSIndex] = ADC_RHSVoltage();
			//current[voltageLHSIndex] = ADC_Current();
			printf("%d\t",voltageRHS[voltageLHSIndex]);
 50a:	05 e1       	ldi	r16, 0x15	; 21
 50c:	11 e0       	ldi	r17, 0x01	; 1
			printf("%d\n",voltageLHS[voltageLHSIndex]);
 50e:	c9 e1       	ldi	r28, 0x19	; 25
 510:	d1 e0       	ldi	r29, 0x01	; 1
	//_delay_ms(5200);

    while (1) 
    {	
		//reset index positions
		voltageLHSIndex = 0;
 512:	10 92 1f 01 	sts	0x011F, r1	; 0x80011f <voltageLHSIndex>
		voltageRHSIndex = 0;
 516:	10 92 1e 01 	sts	0x011E, r1	; 0x80011e <__data_end>
		currentIndex = 0;
 51a:	10 92 20 01 	sts	0x0120, r1	; 0x800120 <currentIndex>
		uint64_t currentSum = 0;
		uint32_t rmsCurrent = 0;
		uint32_t powerArray[NUMBER_OF_SAMPLES] = {0};
		
		//receive message code
		if(finished){
 51e:	80 91 4d 01 	lds	r24, 0x014D	; 0x80014d <finished>
 522:	88 23       	and	r24, r24
 524:	19 f1       	breq	.+70     	; 0x56c <main+0x98>
			pumpParam = concatenate(pumpingEffortArray[0],pumpingEffortArray[1],pumpingEffortArray[2]);
 526:	f7 01       	movw	r30, r14
 528:	42 81       	ldd	r20, Z+2	; 0x02
 52a:	61 81       	ldd	r22, Z+1	; 0x01
 52c:	80 81       	ld	r24, Z
 52e:	50 e0       	ldi	r21, 0x00	; 0
 530:	70 e0       	ldi	r23, 0x00	; 0
 532:	90 e0       	ldi	r25, 0x00	; 0
 534:	0e 94 0f 01 	call	0x21e	; 0x21e <concatenate>
 538:	90 93 22 01 	sts	0x0122, r25	; 0x800122 <pumpParam+0x1>
 53c:	80 93 21 01 	sts	0x0121, r24	; 0x800121 <pumpParam>
			UART_Transmit(pumpParam);
 540:	80 91 21 01 	lds	r24, 0x0121	; 0x800121 <pumpParam>
 544:	90 91 22 01 	lds	r25, 0x0122	; 0x800122 <pumpParam+0x1>
 548:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <UART_Transmit>
			for(int i = 0; i < 38; i++){
 54c:	80 e0       	ldi	r24, 0x00	; 0
 54e:	90 e0       	ldi	r25, 0x00	; 0
				pumpingEffortArray[i] = 0;
 550:	fc 01       	movw	r30, r24
 552:	ed 5d       	subi	r30, 0xDD	; 221
 554:	fe 4f       	sbci	r31, 0xFE	; 254
 556:	10 82       	st	Z, r1
		
		//receive message code
		if(finished){
			pumpParam = concatenate(pumpingEffortArray[0],pumpingEffortArray[1],pumpingEffortArray[2]);
			UART_Transmit(pumpParam);
			for(int i = 0; i < 38; i++){
 558:	01 96       	adiw	r24, 0x01	; 1
 55a:	86 32       	cpi	r24, 0x26	; 38
 55c:	91 05       	cpc	r25, r1
 55e:	c1 f7       	brne	.-16     	; 0x550 <main+0x7c>
				pumpingEffortArray[i] = 0;
			}

			finished = false;
 560:	10 92 4d 01 	sts	0x014D, r1	; 0x80014d <finished>
			rx_count = 0;
 564:	10 92 4c 01 	sts	0x014C, r1	; 0x80014c <rx_count+0x1>
 568:	10 92 4b 01 	sts	0x014B, r1	; 0x80014b <rx_count>
		}
		
		//change the pumping effort
		if(changePumpingEffort){
 56c:	80 91 4e 01 	lds	r24, 0x014E	; 0x80014e <changePumpingEffort>
		}
		
		
		/****Voltage and Current*****/
		//get voltage values
		while(voltageLHSIndex < NUMBER_OF_SAMPLES){
 570:	80 91 1f 01 	lds	r24, 0x011F	; 0x80011f <voltageLHSIndex>
 574:	82 38       	cpi	r24, 0x82	; 130
 576:	68 f6       	brcc	.-102    	; 0x512 <main+0x3e>
			voltageLHS[voltageLHSIndex] = ADC_LHSVoltage();
 578:	c0 90 1f 01 	lds	r12, 0x011F	; 0x80011f <voltageLHSIndex>
 57c:	d1 2c       	mov	r13, r1
 57e:	0e 94 95 00 	call	0x12a	; 0x12a <ADC_LHSVoltage>
 582:	f6 01       	movw	r30, r12
 584:	ee 0f       	add	r30, r30
 586:	ff 1f       	adc	r31, r31
 588:	ee 0f       	add	r30, r30
 58a:	ff 1f       	adc	r31, r31
 58c:	e7 5a       	subi	r30, 0xA7	; 167
 58e:	fc 4f       	sbci	r31, 0xFC	; 252
 590:	60 83       	st	Z, r22
 592:	71 83       	std	Z+1, r23	; 0x01
 594:	82 83       	std	Z+2, r24	; 0x02
 596:	93 83       	std	Z+3, r25	; 0x03
			voltageRHS[voltageLHSIndex] = ADC_RHSVoltage();
 598:	c0 90 1f 01 	lds	r12, 0x011F	; 0x80011f <voltageLHSIndex>
 59c:	d1 2c       	mov	r13, r1
 59e:	0e 94 b0 00 	call	0x160	; 0x160 <ADC_RHSVoltage>
 5a2:	f6 01       	movw	r30, r12
 5a4:	ee 0f       	add	r30, r30
 5a6:	ff 1f       	adc	r31, r31
 5a8:	ee 0f       	add	r30, r30
 5aa:	ff 1f       	adc	r31, r31
 5ac:	ef 5a       	subi	r30, 0xAF	; 175
 5ae:	fe 4f       	sbci	r31, 0xFE	; 254
 5b0:	60 83       	st	Z, r22
 5b2:	71 83       	std	Z+1, r23	; 0x01
 5b4:	82 83       	std	Z+2, r24	; 0x02
 5b6:	93 83       	std	Z+3, r25	; 0x03
			//current[voltageLHSIndex] = ADC_Current();
			printf("%d\t",voltageRHS[voltageLHSIndex]);
 5b8:	e0 91 1f 01 	lds	r30, 0x011F	; 0x80011f <voltageLHSIndex>
 5bc:	f0 e0       	ldi	r31, 0x00	; 0
 5be:	ee 0f       	add	r30, r30
 5c0:	ff 1f       	adc	r31, r31
 5c2:	ee 0f       	add	r30, r30
 5c4:	ff 1f       	adc	r31, r31
 5c6:	ef 5a       	subi	r30, 0xAF	; 175
 5c8:	fe 4f       	sbci	r31, 0xFE	; 254
 5ca:	80 81       	ld	r24, Z
 5cc:	91 81       	ldd	r25, Z+1	; 0x01
 5ce:	a2 81       	ldd	r26, Z+2	; 0x02
 5d0:	b3 81       	ldd	r27, Z+3	; 0x03
 5d2:	bf 93       	push	r27
 5d4:	af 93       	push	r26
 5d6:	9f 93       	push	r25
 5d8:	8f 93       	push	r24
 5da:	1f 93       	push	r17
 5dc:	0f 93       	push	r16
 5de:	0e 94 69 03 	call	0x6d2	; 0x6d2 <printf>
			printf("%d\n",voltageLHS[voltageLHSIndex]);
 5e2:	e0 91 1f 01 	lds	r30, 0x011F	; 0x80011f <voltageLHSIndex>
 5e6:	f0 e0       	ldi	r31, 0x00	; 0
 5e8:	ee 0f       	add	r30, r30
 5ea:	ff 1f       	adc	r31, r31
 5ec:	ee 0f       	add	r30, r30
 5ee:	ff 1f       	adc	r31, r31
 5f0:	e7 5a       	subi	r30, 0xA7	; 167
 5f2:	fc 4f       	sbci	r31, 0xFC	; 252
 5f4:	80 81       	ld	r24, Z
 5f6:	91 81       	ldd	r25, Z+1	; 0x01
 5f8:	a2 81       	ldd	r26, Z+2	; 0x02
 5fa:	b3 81       	ldd	r27, Z+3	; 0x03
 5fc:	bf 93       	push	r27
 5fe:	af 93       	push	r26
 600:	9f 93       	push	r25
 602:	8f 93       	push	r24
 604:	df 93       	push	r29
 606:	cf 93       	push	r28
 608:	0e 94 69 03 	call	0x6d2	; 0x6d2 <printf>
			voltageLHSIndex++;
 60c:	80 91 1f 01 	lds	r24, 0x011F	; 0x80011f <voltageLHSIndex>
 610:	8f 5f       	subi	r24, 0xFF	; 255
 612:	80 93 1f 01 	sts	0x011F, r24	; 0x80011f <voltageLHSIndex>
		}
		
		
		/****Voltage and Current*****/
		//get voltage values
		while(voltageLHSIndex < NUMBER_OF_SAMPLES){
 616:	80 91 1f 01 	lds	r24, 0x011F	; 0x80011f <voltageLHSIndex>
 61a:	ed b7       	in	r30, 0x3d	; 61
 61c:	fe b7       	in	r31, 0x3e	; 62
 61e:	3c 96       	adiw	r30, 0x0c	; 12
 620:	0f b6       	in	r0, 0x3f	; 63
 622:	f8 94       	cli
 624:	fe bf       	out	0x3e, r31	; 62
 626:	0f be       	out	0x3f, r0	; 63
 628:	ed bf       	out	0x3d, r30	; 61
 62a:	82 38       	cpi	r24, 0x82	; 130
 62c:	08 f4       	brcc	.+2      	; 0x630 <main+0x15c>
 62e:	a4 cf       	rjmp	.-184    	; 0x578 <main+0xa4>
 630:	70 cf       	rjmp	.-288    	; 0x512 <main+0x3e>

00000632 <__udivmodhi4>:
 632:	aa 1b       	sub	r26, r26
 634:	bb 1b       	sub	r27, r27
 636:	51 e1       	ldi	r21, 0x11	; 17
 638:	07 c0       	rjmp	.+14     	; 0x648 <__udivmodhi4_ep>

0000063a <__udivmodhi4_loop>:
 63a:	aa 1f       	adc	r26, r26
 63c:	bb 1f       	adc	r27, r27
 63e:	a6 17       	cp	r26, r22
 640:	b7 07       	cpc	r27, r23
 642:	10 f0       	brcs	.+4      	; 0x648 <__udivmodhi4_ep>
 644:	a6 1b       	sub	r26, r22
 646:	b7 0b       	sbc	r27, r23

00000648 <__udivmodhi4_ep>:
 648:	88 1f       	adc	r24, r24
 64a:	99 1f       	adc	r25, r25
 64c:	5a 95       	dec	r21
 64e:	a9 f7       	brne	.-22     	; 0x63a <__udivmodhi4_loop>
 650:	80 95       	com	r24
 652:	90 95       	com	r25
 654:	bc 01       	movw	r22, r24
 656:	cd 01       	movw	r24, r26
 658:	08 95       	ret

0000065a <__udivmodsi4>:
 65a:	a1 e2       	ldi	r26, 0x21	; 33
 65c:	1a 2e       	mov	r1, r26
 65e:	aa 1b       	sub	r26, r26
 660:	bb 1b       	sub	r27, r27
 662:	fd 01       	movw	r30, r26
 664:	0d c0       	rjmp	.+26     	; 0x680 <__udivmodsi4_ep>

00000666 <__udivmodsi4_loop>:
 666:	aa 1f       	adc	r26, r26
 668:	bb 1f       	adc	r27, r27
 66a:	ee 1f       	adc	r30, r30
 66c:	ff 1f       	adc	r31, r31
 66e:	a2 17       	cp	r26, r18
 670:	b3 07       	cpc	r27, r19
 672:	e4 07       	cpc	r30, r20
 674:	f5 07       	cpc	r31, r21
 676:	20 f0       	brcs	.+8      	; 0x680 <__udivmodsi4_ep>
 678:	a2 1b       	sub	r26, r18
 67a:	b3 0b       	sbc	r27, r19
 67c:	e4 0b       	sbc	r30, r20
 67e:	f5 0b       	sbc	r31, r21

00000680 <__udivmodsi4_ep>:
 680:	66 1f       	adc	r22, r22
 682:	77 1f       	adc	r23, r23
 684:	88 1f       	adc	r24, r24
 686:	99 1f       	adc	r25, r25
 688:	1a 94       	dec	r1
 68a:	69 f7       	brne	.-38     	; 0x666 <__udivmodsi4_loop>
 68c:	60 95       	com	r22
 68e:	70 95       	com	r23
 690:	80 95       	com	r24
 692:	90 95       	com	r25
 694:	9b 01       	movw	r18, r22
 696:	ac 01       	movw	r20, r24
 698:	bd 01       	movw	r22, r26
 69a:	cf 01       	movw	r24, r30
 69c:	08 95       	ret

0000069e <__umulhisi3>:
 69e:	a2 9f       	mul	r26, r18
 6a0:	b0 01       	movw	r22, r0
 6a2:	b3 9f       	mul	r27, r19
 6a4:	c0 01       	movw	r24, r0
 6a6:	a3 9f       	mul	r26, r19
 6a8:	70 0d       	add	r23, r0
 6aa:	81 1d       	adc	r24, r1
 6ac:	11 24       	eor	r1, r1
 6ae:	91 1d       	adc	r25, r1
 6b0:	b2 9f       	mul	r27, r18
 6b2:	70 0d       	add	r23, r0
 6b4:	81 1d       	adc	r24, r1
 6b6:	11 24       	eor	r1, r1
 6b8:	91 1d       	adc	r25, r1
 6ba:	08 95       	ret

000006bc <__muluhisi3>:
 6bc:	0e 94 4f 03 	call	0x69e	; 0x69e <__umulhisi3>
 6c0:	a5 9f       	mul	r26, r21
 6c2:	90 0d       	add	r25, r0
 6c4:	b4 9f       	mul	r27, r20
 6c6:	90 0d       	add	r25, r0
 6c8:	a4 9f       	mul	r26, r20
 6ca:	80 0d       	add	r24, r0
 6cc:	91 1d       	adc	r25, r1
 6ce:	11 24       	eor	r1, r1
 6d0:	08 95       	ret

000006d2 <printf>:
 6d2:	a0 e0       	ldi	r26, 0x00	; 0
 6d4:	b0 e0       	ldi	r27, 0x00	; 0
 6d6:	ef e6       	ldi	r30, 0x6F	; 111
 6d8:	f3 e0       	ldi	r31, 0x03	; 3
 6da:	0c 94 20 06 	jmp	0xc40	; 0xc40 <__prologue_saves__+0x20>
 6de:	ae 01       	movw	r20, r28
 6e0:	4b 5f       	subi	r20, 0xFB	; 251
 6e2:	5f 4f       	sbci	r21, 0xFF	; 255
 6e4:	fa 01       	movw	r30, r20
 6e6:	61 91       	ld	r22, Z+
 6e8:	71 91       	ld	r23, Z+
 6ea:	af 01       	movw	r20, r30
 6ec:	80 91 72 08 	lds	r24, 0x0872	; 0x800872 <__iob+0x2>
 6f0:	90 91 73 08 	lds	r25, 0x0873	; 0x800873 <__iob+0x3>
 6f4:	0e 94 7f 03 	call	0x6fe	; 0x6fe <vfprintf>
 6f8:	e2 e0       	ldi	r30, 0x02	; 2
 6fa:	0c 94 3c 06 	jmp	0xc78	; 0xc78 <__epilogue_restores__+0x20>

000006fe <vfprintf>:
 6fe:	ab e0       	ldi	r26, 0x0B	; 11
 700:	b0 e0       	ldi	r27, 0x00	; 0
 702:	e5 e8       	ldi	r30, 0x85	; 133
 704:	f3 e0       	ldi	r31, 0x03	; 3
 706:	0c 94 10 06 	jmp	0xc20	; 0xc20 <__prologue_saves__>
 70a:	6c 01       	movw	r12, r24
 70c:	7b 01       	movw	r14, r22
 70e:	8a 01       	movw	r16, r20
 710:	fc 01       	movw	r30, r24
 712:	17 82       	std	Z+7, r1	; 0x07
 714:	16 82       	std	Z+6, r1	; 0x06
 716:	83 81       	ldd	r24, Z+3	; 0x03
 718:	81 ff       	sbrs	r24, 1
 71a:	cc c1       	rjmp	.+920    	; 0xab4 <__stack+0x1b5>
 71c:	ce 01       	movw	r24, r28
 71e:	01 96       	adiw	r24, 0x01	; 1
 720:	3c 01       	movw	r6, r24
 722:	f6 01       	movw	r30, r12
 724:	93 81       	ldd	r25, Z+3	; 0x03
 726:	f7 01       	movw	r30, r14
 728:	93 fd       	sbrc	r25, 3
 72a:	85 91       	lpm	r24, Z+
 72c:	93 ff       	sbrs	r25, 3
 72e:	81 91       	ld	r24, Z+
 730:	7f 01       	movw	r14, r30
 732:	88 23       	and	r24, r24
 734:	09 f4       	brne	.+2      	; 0x738 <vfprintf+0x3a>
 736:	ba c1       	rjmp	.+884    	; 0xaac <__stack+0x1ad>
 738:	85 32       	cpi	r24, 0x25	; 37
 73a:	39 f4       	brne	.+14     	; 0x74a <vfprintf+0x4c>
 73c:	93 fd       	sbrc	r25, 3
 73e:	85 91       	lpm	r24, Z+
 740:	93 ff       	sbrs	r25, 3
 742:	81 91       	ld	r24, Z+
 744:	7f 01       	movw	r14, r30
 746:	85 32       	cpi	r24, 0x25	; 37
 748:	29 f4       	brne	.+10     	; 0x754 <vfprintf+0x56>
 74a:	b6 01       	movw	r22, r12
 74c:	90 e0       	ldi	r25, 0x00	; 0
 74e:	0e 94 76 05 	call	0xaec	; 0xaec <fputc>
 752:	e7 cf       	rjmp	.-50     	; 0x722 <vfprintf+0x24>
 754:	91 2c       	mov	r9, r1
 756:	21 2c       	mov	r2, r1
 758:	31 2c       	mov	r3, r1
 75a:	ff e1       	ldi	r31, 0x1F	; 31
 75c:	f3 15       	cp	r31, r3
 75e:	d8 f0       	brcs	.+54     	; 0x796 <vfprintf+0x98>
 760:	8b 32       	cpi	r24, 0x2B	; 43
 762:	79 f0       	breq	.+30     	; 0x782 <vfprintf+0x84>
 764:	38 f4       	brcc	.+14     	; 0x774 <vfprintf+0x76>
 766:	80 32       	cpi	r24, 0x20	; 32
 768:	79 f0       	breq	.+30     	; 0x788 <vfprintf+0x8a>
 76a:	83 32       	cpi	r24, 0x23	; 35
 76c:	a1 f4       	brne	.+40     	; 0x796 <vfprintf+0x98>
 76e:	23 2d       	mov	r18, r3
 770:	20 61       	ori	r18, 0x10	; 16
 772:	1d c0       	rjmp	.+58     	; 0x7ae <vfprintf+0xb0>
 774:	8d 32       	cpi	r24, 0x2D	; 45
 776:	61 f0       	breq	.+24     	; 0x790 <vfprintf+0x92>
 778:	80 33       	cpi	r24, 0x30	; 48
 77a:	69 f4       	brne	.+26     	; 0x796 <vfprintf+0x98>
 77c:	23 2d       	mov	r18, r3
 77e:	21 60       	ori	r18, 0x01	; 1
 780:	16 c0       	rjmp	.+44     	; 0x7ae <vfprintf+0xb0>
 782:	83 2d       	mov	r24, r3
 784:	82 60       	ori	r24, 0x02	; 2
 786:	38 2e       	mov	r3, r24
 788:	e3 2d       	mov	r30, r3
 78a:	e4 60       	ori	r30, 0x04	; 4
 78c:	3e 2e       	mov	r3, r30
 78e:	2a c0       	rjmp	.+84     	; 0x7e4 <vfprintf+0xe6>
 790:	f3 2d       	mov	r31, r3
 792:	f8 60       	ori	r31, 0x08	; 8
 794:	1d c0       	rjmp	.+58     	; 0x7d0 <vfprintf+0xd2>
 796:	37 fc       	sbrc	r3, 7
 798:	2d c0       	rjmp	.+90     	; 0x7f4 <vfprintf+0xf6>
 79a:	20 ed       	ldi	r18, 0xD0	; 208
 79c:	28 0f       	add	r18, r24
 79e:	2a 30       	cpi	r18, 0x0A	; 10
 7a0:	40 f0       	brcs	.+16     	; 0x7b2 <vfprintf+0xb4>
 7a2:	8e 32       	cpi	r24, 0x2E	; 46
 7a4:	b9 f4       	brne	.+46     	; 0x7d4 <vfprintf+0xd6>
 7a6:	36 fc       	sbrc	r3, 6
 7a8:	81 c1       	rjmp	.+770    	; 0xaac <__stack+0x1ad>
 7aa:	23 2d       	mov	r18, r3
 7ac:	20 64       	ori	r18, 0x40	; 64
 7ae:	32 2e       	mov	r3, r18
 7b0:	19 c0       	rjmp	.+50     	; 0x7e4 <vfprintf+0xe6>
 7b2:	36 fe       	sbrs	r3, 6
 7b4:	06 c0       	rjmp	.+12     	; 0x7c2 <vfprintf+0xc4>
 7b6:	8a e0       	ldi	r24, 0x0A	; 10
 7b8:	98 9e       	mul	r9, r24
 7ba:	20 0d       	add	r18, r0
 7bc:	11 24       	eor	r1, r1
 7be:	92 2e       	mov	r9, r18
 7c0:	11 c0       	rjmp	.+34     	; 0x7e4 <vfprintf+0xe6>
 7c2:	ea e0       	ldi	r30, 0x0A	; 10
 7c4:	2e 9e       	mul	r2, r30
 7c6:	20 0d       	add	r18, r0
 7c8:	11 24       	eor	r1, r1
 7ca:	22 2e       	mov	r2, r18
 7cc:	f3 2d       	mov	r31, r3
 7ce:	f0 62       	ori	r31, 0x20	; 32
 7d0:	3f 2e       	mov	r3, r31
 7d2:	08 c0       	rjmp	.+16     	; 0x7e4 <vfprintf+0xe6>
 7d4:	8c 36       	cpi	r24, 0x6C	; 108
 7d6:	21 f4       	brne	.+8      	; 0x7e0 <vfprintf+0xe2>
 7d8:	83 2d       	mov	r24, r3
 7da:	80 68       	ori	r24, 0x80	; 128
 7dc:	38 2e       	mov	r3, r24
 7de:	02 c0       	rjmp	.+4      	; 0x7e4 <vfprintf+0xe6>
 7e0:	88 36       	cpi	r24, 0x68	; 104
 7e2:	41 f4       	brne	.+16     	; 0x7f4 <vfprintf+0xf6>
 7e4:	f7 01       	movw	r30, r14
 7e6:	93 fd       	sbrc	r25, 3
 7e8:	85 91       	lpm	r24, Z+
 7ea:	93 ff       	sbrs	r25, 3
 7ec:	81 91       	ld	r24, Z+
 7ee:	7f 01       	movw	r14, r30
 7f0:	81 11       	cpse	r24, r1
 7f2:	b3 cf       	rjmp	.-154    	; 0x75a <vfprintf+0x5c>
 7f4:	98 2f       	mov	r25, r24
 7f6:	9f 7d       	andi	r25, 0xDF	; 223
 7f8:	95 54       	subi	r25, 0x45	; 69
 7fa:	93 30       	cpi	r25, 0x03	; 3
 7fc:	28 f4       	brcc	.+10     	; 0x808 <vfprintf+0x10a>
 7fe:	0c 5f       	subi	r16, 0xFC	; 252
 800:	1f 4f       	sbci	r17, 0xFF	; 255
 802:	9f e3       	ldi	r25, 0x3F	; 63
 804:	99 83       	std	Y+1, r25	; 0x01
 806:	0d c0       	rjmp	.+26     	; 0x822 <vfprintf+0x124>
 808:	83 36       	cpi	r24, 0x63	; 99
 80a:	31 f0       	breq	.+12     	; 0x818 <vfprintf+0x11a>
 80c:	83 37       	cpi	r24, 0x73	; 115
 80e:	71 f0       	breq	.+28     	; 0x82c <vfprintf+0x12e>
 810:	83 35       	cpi	r24, 0x53	; 83
 812:	09 f0       	breq	.+2      	; 0x816 <vfprintf+0x118>
 814:	59 c0       	rjmp	.+178    	; 0x8c8 <vfprintf+0x1ca>
 816:	21 c0       	rjmp	.+66     	; 0x85a <vfprintf+0x15c>
 818:	f8 01       	movw	r30, r16
 81a:	80 81       	ld	r24, Z
 81c:	89 83       	std	Y+1, r24	; 0x01
 81e:	0e 5f       	subi	r16, 0xFE	; 254
 820:	1f 4f       	sbci	r17, 0xFF	; 255
 822:	88 24       	eor	r8, r8
 824:	83 94       	inc	r8
 826:	91 2c       	mov	r9, r1
 828:	53 01       	movw	r10, r6
 82a:	13 c0       	rjmp	.+38     	; 0x852 <vfprintf+0x154>
 82c:	28 01       	movw	r4, r16
 82e:	f2 e0       	ldi	r31, 0x02	; 2
 830:	4f 0e       	add	r4, r31
 832:	51 1c       	adc	r5, r1
 834:	f8 01       	movw	r30, r16
 836:	a0 80       	ld	r10, Z
 838:	b1 80       	ldd	r11, Z+1	; 0x01
 83a:	36 fe       	sbrs	r3, 6
 83c:	03 c0       	rjmp	.+6      	; 0x844 <vfprintf+0x146>
 83e:	69 2d       	mov	r22, r9
 840:	70 e0       	ldi	r23, 0x00	; 0
 842:	02 c0       	rjmp	.+4      	; 0x848 <vfprintf+0x14a>
 844:	6f ef       	ldi	r22, 0xFF	; 255
 846:	7f ef       	ldi	r23, 0xFF	; 255
 848:	c5 01       	movw	r24, r10
 84a:	0e 94 6b 05 	call	0xad6	; 0xad6 <strnlen>
 84e:	4c 01       	movw	r8, r24
 850:	82 01       	movw	r16, r4
 852:	f3 2d       	mov	r31, r3
 854:	ff 77       	andi	r31, 0x7F	; 127
 856:	3f 2e       	mov	r3, r31
 858:	16 c0       	rjmp	.+44     	; 0x886 <vfprintf+0x188>
 85a:	28 01       	movw	r4, r16
 85c:	22 e0       	ldi	r18, 0x02	; 2
 85e:	42 0e       	add	r4, r18
 860:	51 1c       	adc	r5, r1
 862:	f8 01       	movw	r30, r16
 864:	a0 80       	ld	r10, Z
 866:	b1 80       	ldd	r11, Z+1	; 0x01
 868:	36 fe       	sbrs	r3, 6
 86a:	03 c0       	rjmp	.+6      	; 0x872 <vfprintf+0x174>
 86c:	69 2d       	mov	r22, r9
 86e:	70 e0       	ldi	r23, 0x00	; 0
 870:	02 c0       	rjmp	.+4      	; 0x876 <vfprintf+0x178>
 872:	6f ef       	ldi	r22, 0xFF	; 255
 874:	7f ef       	ldi	r23, 0xFF	; 255
 876:	c5 01       	movw	r24, r10
 878:	0e 94 60 05 	call	0xac0	; 0xac0 <strnlen_P>
 87c:	4c 01       	movw	r8, r24
 87e:	f3 2d       	mov	r31, r3
 880:	f0 68       	ori	r31, 0x80	; 128
 882:	3f 2e       	mov	r3, r31
 884:	82 01       	movw	r16, r4
 886:	33 fc       	sbrc	r3, 3
 888:	1b c0       	rjmp	.+54     	; 0x8c0 <vfprintf+0x1c2>
 88a:	82 2d       	mov	r24, r2
 88c:	90 e0       	ldi	r25, 0x00	; 0
 88e:	88 16       	cp	r8, r24
 890:	99 06       	cpc	r9, r25
 892:	b0 f4       	brcc	.+44     	; 0x8c0 <vfprintf+0x1c2>
 894:	b6 01       	movw	r22, r12
 896:	80 e2       	ldi	r24, 0x20	; 32
 898:	90 e0       	ldi	r25, 0x00	; 0
 89a:	0e 94 76 05 	call	0xaec	; 0xaec <fputc>
 89e:	2a 94       	dec	r2
 8a0:	f4 cf       	rjmp	.-24     	; 0x88a <vfprintf+0x18c>
 8a2:	f5 01       	movw	r30, r10
 8a4:	37 fc       	sbrc	r3, 7
 8a6:	85 91       	lpm	r24, Z+
 8a8:	37 fe       	sbrs	r3, 7
 8aa:	81 91       	ld	r24, Z+
 8ac:	5f 01       	movw	r10, r30
 8ae:	b6 01       	movw	r22, r12
 8b0:	90 e0       	ldi	r25, 0x00	; 0
 8b2:	0e 94 76 05 	call	0xaec	; 0xaec <fputc>
 8b6:	21 10       	cpse	r2, r1
 8b8:	2a 94       	dec	r2
 8ba:	21 e0       	ldi	r18, 0x01	; 1
 8bc:	82 1a       	sub	r8, r18
 8be:	91 08       	sbc	r9, r1
 8c0:	81 14       	cp	r8, r1
 8c2:	91 04       	cpc	r9, r1
 8c4:	71 f7       	brne	.-36     	; 0x8a2 <vfprintf+0x1a4>
 8c6:	e8 c0       	rjmp	.+464    	; 0xa98 <__stack+0x199>
 8c8:	84 36       	cpi	r24, 0x64	; 100
 8ca:	11 f0       	breq	.+4      	; 0x8d0 <vfprintf+0x1d2>
 8cc:	89 36       	cpi	r24, 0x69	; 105
 8ce:	41 f5       	brne	.+80     	; 0x920 <__stack+0x21>
 8d0:	f8 01       	movw	r30, r16
 8d2:	37 fe       	sbrs	r3, 7
 8d4:	07 c0       	rjmp	.+14     	; 0x8e4 <vfprintf+0x1e6>
 8d6:	60 81       	ld	r22, Z
 8d8:	71 81       	ldd	r23, Z+1	; 0x01
 8da:	82 81       	ldd	r24, Z+2	; 0x02
 8dc:	93 81       	ldd	r25, Z+3	; 0x03
 8de:	0c 5f       	subi	r16, 0xFC	; 252
 8e0:	1f 4f       	sbci	r17, 0xFF	; 255
 8e2:	08 c0       	rjmp	.+16     	; 0x8f4 <vfprintf+0x1f6>
 8e4:	60 81       	ld	r22, Z
 8e6:	71 81       	ldd	r23, Z+1	; 0x01
 8e8:	07 2e       	mov	r0, r23
 8ea:	00 0c       	add	r0, r0
 8ec:	88 0b       	sbc	r24, r24
 8ee:	99 0b       	sbc	r25, r25
 8f0:	0e 5f       	subi	r16, 0xFE	; 254
 8f2:	1f 4f       	sbci	r17, 0xFF	; 255
 8f4:	f3 2d       	mov	r31, r3
 8f6:	ff 76       	andi	r31, 0x6F	; 111
 8f8:	3f 2e       	mov	r3, r31
 8fa:	97 ff       	sbrs	r25, 7
 8fc:	09 c0       	rjmp	.+18     	; 0x910 <__stack+0x11>
 8fe:	90 95       	com	r25
 900:	80 95       	com	r24
 902:	70 95       	com	r23
 904:	61 95       	neg	r22
 906:	7f 4f       	sbci	r23, 0xFF	; 255
 908:	8f 4f       	sbci	r24, 0xFF	; 255
 90a:	9f 4f       	sbci	r25, 0xFF	; 255
 90c:	f0 68       	ori	r31, 0x80	; 128
 90e:	3f 2e       	mov	r3, r31
 910:	2a e0       	ldi	r18, 0x0A	; 10
 912:	30 e0       	ldi	r19, 0x00	; 0
 914:	a3 01       	movw	r20, r6
 916:	0e 94 b2 05 	call	0xb64	; 0xb64 <__ultoa_invert>
 91a:	88 2e       	mov	r8, r24
 91c:	86 18       	sub	r8, r6
 91e:	45 c0       	rjmp	.+138    	; 0x9aa <__stack+0xab>
 920:	85 37       	cpi	r24, 0x75	; 117
 922:	31 f4       	brne	.+12     	; 0x930 <__stack+0x31>
 924:	23 2d       	mov	r18, r3
 926:	2f 7e       	andi	r18, 0xEF	; 239
 928:	b2 2e       	mov	r11, r18
 92a:	2a e0       	ldi	r18, 0x0A	; 10
 92c:	30 e0       	ldi	r19, 0x00	; 0
 92e:	25 c0       	rjmp	.+74     	; 0x97a <__stack+0x7b>
 930:	93 2d       	mov	r25, r3
 932:	99 7f       	andi	r25, 0xF9	; 249
 934:	b9 2e       	mov	r11, r25
 936:	8f 36       	cpi	r24, 0x6F	; 111
 938:	c1 f0       	breq	.+48     	; 0x96a <__stack+0x6b>
 93a:	18 f4       	brcc	.+6      	; 0x942 <__stack+0x43>
 93c:	88 35       	cpi	r24, 0x58	; 88
 93e:	79 f0       	breq	.+30     	; 0x95e <__stack+0x5f>
 940:	b5 c0       	rjmp	.+362    	; 0xaac <__stack+0x1ad>
 942:	80 37       	cpi	r24, 0x70	; 112
 944:	19 f0       	breq	.+6      	; 0x94c <__stack+0x4d>
 946:	88 37       	cpi	r24, 0x78	; 120
 948:	21 f0       	breq	.+8      	; 0x952 <__stack+0x53>
 94a:	b0 c0       	rjmp	.+352    	; 0xaac <__stack+0x1ad>
 94c:	e9 2f       	mov	r30, r25
 94e:	e0 61       	ori	r30, 0x10	; 16
 950:	be 2e       	mov	r11, r30
 952:	b4 fe       	sbrs	r11, 4
 954:	0d c0       	rjmp	.+26     	; 0x970 <__stack+0x71>
 956:	fb 2d       	mov	r31, r11
 958:	f4 60       	ori	r31, 0x04	; 4
 95a:	bf 2e       	mov	r11, r31
 95c:	09 c0       	rjmp	.+18     	; 0x970 <__stack+0x71>
 95e:	34 fe       	sbrs	r3, 4
 960:	0a c0       	rjmp	.+20     	; 0x976 <__stack+0x77>
 962:	29 2f       	mov	r18, r25
 964:	26 60       	ori	r18, 0x06	; 6
 966:	b2 2e       	mov	r11, r18
 968:	06 c0       	rjmp	.+12     	; 0x976 <__stack+0x77>
 96a:	28 e0       	ldi	r18, 0x08	; 8
 96c:	30 e0       	ldi	r19, 0x00	; 0
 96e:	05 c0       	rjmp	.+10     	; 0x97a <__stack+0x7b>
 970:	20 e1       	ldi	r18, 0x10	; 16
 972:	30 e0       	ldi	r19, 0x00	; 0
 974:	02 c0       	rjmp	.+4      	; 0x97a <__stack+0x7b>
 976:	20 e1       	ldi	r18, 0x10	; 16
 978:	32 e0       	ldi	r19, 0x02	; 2
 97a:	f8 01       	movw	r30, r16
 97c:	b7 fe       	sbrs	r11, 7
 97e:	07 c0       	rjmp	.+14     	; 0x98e <__stack+0x8f>
 980:	60 81       	ld	r22, Z
 982:	71 81       	ldd	r23, Z+1	; 0x01
 984:	82 81       	ldd	r24, Z+2	; 0x02
 986:	93 81       	ldd	r25, Z+3	; 0x03
 988:	0c 5f       	subi	r16, 0xFC	; 252
 98a:	1f 4f       	sbci	r17, 0xFF	; 255
 98c:	06 c0       	rjmp	.+12     	; 0x99a <__stack+0x9b>
 98e:	60 81       	ld	r22, Z
 990:	71 81       	ldd	r23, Z+1	; 0x01
 992:	80 e0       	ldi	r24, 0x00	; 0
 994:	90 e0       	ldi	r25, 0x00	; 0
 996:	0e 5f       	subi	r16, 0xFE	; 254
 998:	1f 4f       	sbci	r17, 0xFF	; 255
 99a:	a3 01       	movw	r20, r6
 99c:	0e 94 b2 05 	call	0xb64	; 0xb64 <__ultoa_invert>
 9a0:	88 2e       	mov	r8, r24
 9a2:	86 18       	sub	r8, r6
 9a4:	fb 2d       	mov	r31, r11
 9a6:	ff 77       	andi	r31, 0x7F	; 127
 9a8:	3f 2e       	mov	r3, r31
 9aa:	36 fe       	sbrs	r3, 6
 9ac:	0d c0       	rjmp	.+26     	; 0x9c8 <__stack+0xc9>
 9ae:	23 2d       	mov	r18, r3
 9b0:	2e 7f       	andi	r18, 0xFE	; 254
 9b2:	a2 2e       	mov	r10, r18
 9b4:	89 14       	cp	r8, r9
 9b6:	58 f4       	brcc	.+22     	; 0x9ce <__stack+0xcf>
 9b8:	34 fe       	sbrs	r3, 4
 9ba:	0b c0       	rjmp	.+22     	; 0x9d2 <__stack+0xd3>
 9bc:	32 fc       	sbrc	r3, 2
 9be:	09 c0       	rjmp	.+18     	; 0x9d2 <__stack+0xd3>
 9c0:	83 2d       	mov	r24, r3
 9c2:	8e 7e       	andi	r24, 0xEE	; 238
 9c4:	a8 2e       	mov	r10, r24
 9c6:	05 c0       	rjmp	.+10     	; 0x9d2 <__stack+0xd3>
 9c8:	b8 2c       	mov	r11, r8
 9ca:	a3 2c       	mov	r10, r3
 9cc:	03 c0       	rjmp	.+6      	; 0x9d4 <__stack+0xd5>
 9ce:	b8 2c       	mov	r11, r8
 9d0:	01 c0       	rjmp	.+2      	; 0x9d4 <__stack+0xd5>
 9d2:	b9 2c       	mov	r11, r9
 9d4:	a4 fe       	sbrs	r10, 4
 9d6:	0f c0       	rjmp	.+30     	; 0x9f6 <__stack+0xf7>
 9d8:	fe 01       	movw	r30, r28
 9da:	e8 0d       	add	r30, r8
 9dc:	f1 1d       	adc	r31, r1
 9de:	80 81       	ld	r24, Z
 9e0:	80 33       	cpi	r24, 0x30	; 48
 9e2:	21 f4       	brne	.+8      	; 0x9ec <__stack+0xed>
 9e4:	9a 2d       	mov	r25, r10
 9e6:	99 7e       	andi	r25, 0xE9	; 233
 9e8:	a9 2e       	mov	r10, r25
 9ea:	09 c0       	rjmp	.+18     	; 0x9fe <__stack+0xff>
 9ec:	a2 fe       	sbrs	r10, 2
 9ee:	06 c0       	rjmp	.+12     	; 0x9fc <__stack+0xfd>
 9f0:	b3 94       	inc	r11
 9f2:	b3 94       	inc	r11
 9f4:	04 c0       	rjmp	.+8      	; 0x9fe <__stack+0xff>
 9f6:	8a 2d       	mov	r24, r10
 9f8:	86 78       	andi	r24, 0x86	; 134
 9fa:	09 f0       	breq	.+2      	; 0x9fe <__stack+0xff>
 9fc:	b3 94       	inc	r11
 9fe:	a3 fc       	sbrc	r10, 3
 a00:	11 c0       	rjmp	.+34     	; 0xa24 <__stack+0x125>
 a02:	a0 fe       	sbrs	r10, 0
 a04:	06 c0       	rjmp	.+12     	; 0xa12 <__stack+0x113>
 a06:	b2 14       	cp	r11, r2
 a08:	88 f4       	brcc	.+34     	; 0xa2c <__stack+0x12d>
 a0a:	28 0c       	add	r2, r8
 a0c:	92 2c       	mov	r9, r2
 a0e:	9b 18       	sub	r9, r11
 a10:	0e c0       	rjmp	.+28     	; 0xa2e <__stack+0x12f>
 a12:	b2 14       	cp	r11, r2
 a14:	60 f4       	brcc	.+24     	; 0xa2e <__stack+0x12f>
 a16:	b6 01       	movw	r22, r12
 a18:	80 e2       	ldi	r24, 0x20	; 32
 a1a:	90 e0       	ldi	r25, 0x00	; 0
 a1c:	0e 94 76 05 	call	0xaec	; 0xaec <fputc>
 a20:	b3 94       	inc	r11
 a22:	f7 cf       	rjmp	.-18     	; 0xa12 <__stack+0x113>
 a24:	b2 14       	cp	r11, r2
 a26:	18 f4       	brcc	.+6      	; 0xa2e <__stack+0x12f>
 a28:	2b 18       	sub	r2, r11
 a2a:	02 c0       	rjmp	.+4      	; 0xa30 <__stack+0x131>
 a2c:	98 2c       	mov	r9, r8
 a2e:	21 2c       	mov	r2, r1
 a30:	a4 fe       	sbrs	r10, 4
 a32:	10 c0       	rjmp	.+32     	; 0xa54 <__stack+0x155>
 a34:	b6 01       	movw	r22, r12
 a36:	80 e3       	ldi	r24, 0x30	; 48
 a38:	90 e0       	ldi	r25, 0x00	; 0
 a3a:	0e 94 76 05 	call	0xaec	; 0xaec <fputc>
 a3e:	a2 fe       	sbrs	r10, 2
 a40:	17 c0       	rjmp	.+46     	; 0xa70 <__stack+0x171>
 a42:	a1 fc       	sbrc	r10, 1
 a44:	03 c0       	rjmp	.+6      	; 0xa4c <__stack+0x14d>
 a46:	88 e7       	ldi	r24, 0x78	; 120
 a48:	90 e0       	ldi	r25, 0x00	; 0
 a4a:	02 c0       	rjmp	.+4      	; 0xa50 <__stack+0x151>
 a4c:	88 e5       	ldi	r24, 0x58	; 88
 a4e:	90 e0       	ldi	r25, 0x00	; 0
 a50:	b6 01       	movw	r22, r12
 a52:	0c c0       	rjmp	.+24     	; 0xa6c <__stack+0x16d>
 a54:	8a 2d       	mov	r24, r10
 a56:	86 78       	andi	r24, 0x86	; 134
 a58:	59 f0       	breq	.+22     	; 0xa70 <__stack+0x171>
 a5a:	a1 fe       	sbrs	r10, 1
 a5c:	02 c0       	rjmp	.+4      	; 0xa62 <__stack+0x163>
 a5e:	8b e2       	ldi	r24, 0x2B	; 43
 a60:	01 c0       	rjmp	.+2      	; 0xa64 <__stack+0x165>
 a62:	80 e2       	ldi	r24, 0x20	; 32
 a64:	a7 fc       	sbrc	r10, 7
 a66:	8d e2       	ldi	r24, 0x2D	; 45
 a68:	b6 01       	movw	r22, r12
 a6a:	90 e0       	ldi	r25, 0x00	; 0
 a6c:	0e 94 76 05 	call	0xaec	; 0xaec <fputc>
 a70:	89 14       	cp	r8, r9
 a72:	38 f4       	brcc	.+14     	; 0xa82 <__stack+0x183>
 a74:	b6 01       	movw	r22, r12
 a76:	80 e3       	ldi	r24, 0x30	; 48
 a78:	90 e0       	ldi	r25, 0x00	; 0
 a7a:	0e 94 76 05 	call	0xaec	; 0xaec <fputc>
 a7e:	9a 94       	dec	r9
 a80:	f7 cf       	rjmp	.-18     	; 0xa70 <__stack+0x171>
 a82:	8a 94       	dec	r8
 a84:	f3 01       	movw	r30, r6
 a86:	e8 0d       	add	r30, r8
 a88:	f1 1d       	adc	r31, r1
 a8a:	80 81       	ld	r24, Z
 a8c:	b6 01       	movw	r22, r12
 a8e:	90 e0       	ldi	r25, 0x00	; 0
 a90:	0e 94 76 05 	call	0xaec	; 0xaec <fputc>
 a94:	81 10       	cpse	r8, r1
 a96:	f5 cf       	rjmp	.-22     	; 0xa82 <__stack+0x183>
 a98:	22 20       	and	r2, r2
 a9a:	09 f4       	brne	.+2      	; 0xa9e <__stack+0x19f>
 a9c:	42 ce       	rjmp	.-892    	; 0x722 <vfprintf+0x24>
 a9e:	b6 01       	movw	r22, r12
 aa0:	80 e2       	ldi	r24, 0x20	; 32
 aa2:	90 e0       	ldi	r25, 0x00	; 0
 aa4:	0e 94 76 05 	call	0xaec	; 0xaec <fputc>
 aa8:	2a 94       	dec	r2
 aaa:	f6 cf       	rjmp	.-20     	; 0xa98 <__stack+0x199>
 aac:	f6 01       	movw	r30, r12
 aae:	86 81       	ldd	r24, Z+6	; 0x06
 ab0:	97 81       	ldd	r25, Z+7	; 0x07
 ab2:	02 c0       	rjmp	.+4      	; 0xab8 <__stack+0x1b9>
 ab4:	8f ef       	ldi	r24, 0xFF	; 255
 ab6:	9f ef       	ldi	r25, 0xFF	; 255
 ab8:	2b 96       	adiw	r28, 0x0b	; 11
 aba:	e2 e1       	ldi	r30, 0x12	; 18
 abc:	0c 94 2c 06 	jmp	0xc58	; 0xc58 <__epilogue_restores__>

00000ac0 <strnlen_P>:
 ac0:	fc 01       	movw	r30, r24
 ac2:	05 90       	lpm	r0, Z+
 ac4:	61 50       	subi	r22, 0x01	; 1
 ac6:	70 40       	sbci	r23, 0x00	; 0
 ac8:	01 10       	cpse	r0, r1
 aca:	d8 f7       	brcc	.-10     	; 0xac2 <strnlen_P+0x2>
 acc:	80 95       	com	r24
 ace:	90 95       	com	r25
 ad0:	8e 0f       	add	r24, r30
 ad2:	9f 1f       	adc	r25, r31
 ad4:	08 95       	ret

00000ad6 <strnlen>:
 ad6:	fc 01       	movw	r30, r24
 ad8:	61 50       	subi	r22, 0x01	; 1
 ada:	70 40       	sbci	r23, 0x00	; 0
 adc:	01 90       	ld	r0, Z+
 ade:	01 10       	cpse	r0, r1
 ae0:	d8 f7       	brcc	.-10     	; 0xad8 <strnlen+0x2>
 ae2:	80 95       	com	r24
 ae4:	90 95       	com	r25
 ae6:	8e 0f       	add	r24, r30
 ae8:	9f 1f       	adc	r25, r31
 aea:	08 95       	ret

00000aec <fputc>:
 aec:	0f 93       	push	r16
 aee:	1f 93       	push	r17
 af0:	cf 93       	push	r28
 af2:	df 93       	push	r29
 af4:	fb 01       	movw	r30, r22
 af6:	23 81       	ldd	r18, Z+3	; 0x03
 af8:	21 fd       	sbrc	r18, 1
 afa:	03 c0       	rjmp	.+6      	; 0xb02 <fputc+0x16>
 afc:	8f ef       	ldi	r24, 0xFF	; 255
 afe:	9f ef       	ldi	r25, 0xFF	; 255
 b00:	2c c0       	rjmp	.+88     	; 0xb5a <fputc+0x6e>
 b02:	22 ff       	sbrs	r18, 2
 b04:	16 c0       	rjmp	.+44     	; 0xb32 <fputc+0x46>
 b06:	46 81       	ldd	r20, Z+6	; 0x06
 b08:	57 81       	ldd	r21, Z+7	; 0x07
 b0a:	24 81       	ldd	r18, Z+4	; 0x04
 b0c:	35 81       	ldd	r19, Z+5	; 0x05
 b0e:	42 17       	cp	r20, r18
 b10:	53 07       	cpc	r21, r19
 b12:	44 f4       	brge	.+16     	; 0xb24 <fputc+0x38>
 b14:	a0 81       	ld	r26, Z
 b16:	b1 81       	ldd	r27, Z+1	; 0x01
 b18:	9d 01       	movw	r18, r26
 b1a:	2f 5f       	subi	r18, 0xFF	; 255
 b1c:	3f 4f       	sbci	r19, 0xFF	; 255
 b1e:	31 83       	std	Z+1, r19	; 0x01
 b20:	20 83       	st	Z, r18
 b22:	8c 93       	st	X, r24
 b24:	26 81       	ldd	r18, Z+6	; 0x06
 b26:	37 81       	ldd	r19, Z+7	; 0x07
 b28:	2f 5f       	subi	r18, 0xFF	; 255
 b2a:	3f 4f       	sbci	r19, 0xFF	; 255
 b2c:	37 83       	std	Z+7, r19	; 0x07
 b2e:	26 83       	std	Z+6, r18	; 0x06
 b30:	14 c0       	rjmp	.+40     	; 0xb5a <fputc+0x6e>
 b32:	8b 01       	movw	r16, r22
 b34:	ec 01       	movw	r28, r24
 b36:	fb 01       	movw	r30, r22
 b38:	00 84       	ldd	r0, Z+8	; 0x08
 b3a:	f1 85       	ldd	r31, Z+9	; 0x09
 b3c:	e0 2d       	mov	r30, r0
 b3e:	09 95       	icall
 b40:	89 2b       	or	r24, r25
 b42:	e1 f6       	brne	.-72     	; 0xafc <fputc+0x10>
 b44:	d8 01       	movw	r26, r16
 b46:	16 96       	adiw	r26, 0x06	; 6
 b48:	8d 91       	ld	r24, X+
 b4a:	9c 91       	ld	r25, X
 b4c:	17 97       	sbiw	r26, 0x07	; 7
 b4e:	01 96       	adiw	r24, 0x01	; 1
 b50:	17 96       	adiw	r26, 0x07	; 7
 b52:	9c 93       	st	X, r25
 b54:	8e 93       	st	-X, r24
 b56:	16 97       	sbiw	r26, 0x06	; 6
 b58:	ce 01       	movw	r24, r28
 b5a:	df 91       	pop	r29
 b5c:	cf 91       	pop	r28
 b5e:	1f 91       	pop	r17
 b60:	0f 91       	pop	r16
 b62:	08 95       	ret

00000b64 <__ultoa_invert>:
 b64:	fa 01       	movw	r30, r20
 b66:	aa 27       	eor	r26, r26
 b68:	28 30       	cpi	r18, 0x08	; 8
 b6a:	51 f1       	breq	.+84     	; 0xbc0 <__ultoa_invert+0x5c>
 b6c:	20 31       	cpi	r18, 0x10	; 16
 b6e:	81 f1       	breq	.+96     	; 0xbd0 <__ultoa_invert+0x6c>
 b70:	e8 94       	clt
 b72:	6f 93       	push	r22
 b74:	6e 7f       	andi	r22, 0xFE	; 254
 b76:	6e 5f       	subi	r22, 0xFE	; 254
 b78:	7f 4f       	sbci	r23, 0xFF	; 255
 b7a:	8f 4f       	sbci	r24, 0xFF	; 255
 b7c:	9f 4f       	sbci	r25, 0xFF	; 255
 b7e:	af 4f       	sbci	r26, 0xFF	; 255
 b80:	b1 e0       	ldi	r27, 0x01	; 1
 b82:	3e d0       	rcall	.+124    	; 0xc00 <__ultoa_invert+0x9c>
 b84:	b4 e0       	ldi	r27, 0x04	; 4
 b86:	3c d0       	rcall	.+120    	; 0xc00 <__ultoa_invert+0x9c>
 b88:	67 0f       	add	r22, r23
 b8a:	78 1f       	adc	r23, r24
 b8c:	89 1f       	adc	r24, r25
 b8e:	9a 1f       	adc	r25, r26
 b90:	a1 1d       	adc	r26, r1
 b92:	68 0f       	add	r22, r24
 b94:	79 1f       	adc	r23, r25
 b96:	8a 1f       	adc	r24, r26
 b98:	91 1d       	adc	r25, r1
 b9a:	a1 1d       	adc	r26, r1
 b9c:	6a 0f       	add	r22, r26
 b9e:	71 1d       	adc	r23, r1
 ba0:	81 1d       	adc	r24, r1
 ba2:	91 1d       	adc	r25, r1
 ba4:	a1 1d       	adc	r26, r1
 ba6:	20 d0       	rcall	.+64     	; 0xbe8 <__ultoa_invert+0x84>
 ba8:	09 f4       	brne	.+2      	; 0xbac <__ultoa_invert+0x48>
 baa:	68 94       	set
 bac:	3f 91       	pop	r19
 bae:	2a e0       	ldi	r18, 0x0A	; 10
 bb0:	26 9f       	mul	r18, r22
 bb2:	11 24       	eor	r1, r1
 bb4:	30 19       	sub	r19, r0
 bb6:	30 5d       	subi	r19, 0xD0	; 208
 bb8:	31 93       	st	Z+, r19
 bba:	de f6       	brtc	.-74     	; 0xb72 <__ultoa_invert+0xe>
 bbc:	cf 01       	movw	r24, r30
 bbe:	08 95       	ret
 bc0:	46 2f       	mov	r20, r22
 bc2:	47 70       	andi	r20, 0x07	; 7
 bc4:	40 5d       	subi	r20, 0xD0	; 208
 bc6:	41 93       	st	Z+, r20
 bc8:	b3 e0       	ldi	r27, 0x03	; 3
 bca:	0f d0       	rcall	.+30     	; 0xbea <__ultoa_invert+0x86>
 bcc:	c9 f7       	brne	.-14     	; 0xbc0 <__ultoa_invert+0x5c>
 bce:	f6 cf       	rjmp	.-20     	; 0xbbc <__ultoa_invert+0x58>
 bd0:	46 2f       	mov	r20, r22
 bd2:	4f 70       	andi	r20, 0x0F	; 15
 bd4:	40 5d       	subi	r20, 0xD0	; 208
 bd6:	4a 33       	cpi	r20, 0x3A	; 58
 bd8:	18 f0       	brcs	.+6      	; 0xbe0 <__ultoa_invert+0x7c>
 bda:	49 5d       	subi	r20, 0xD9	; 217
 bdc:	31 fd       	sbrc	r19, 1
 bde:	40 52       	subi	r20, 0x20	; 32
 be0:	41 93       	st	Z+, r20
 be2:	02 d0       	rcall	.+4      	; 0xbe8 <__ultoa_invert+0x84>
 be4:	a9 f7       	brne	.-22     	; 0xbd0 <__ultoa_invert+0x6c>
 be6:	ea cf       	rjmp	.-44     	; 0xbbc <__ultoa_invert+0x58>
 be8:	b4 e0       	ldi	r27, 0x04	; 4
 bea:	a6 95       	lsr	r26
 bec:	97 95       	ror	r25
 bee:	87 95       	ror	r24
 bf0:	77 95       	ror	r23
 bf2:	67 95       	ror	r22
 bf4:	ba 95       	dec	r27
 bf6:	c9 f7       	brne	.-14     	; 0xbea <__ultoa_invert+0x86>
 bf8:	00 97       	sbiw	r24, 0x00	; 0
 bfa:	61 05       	cpc	r22, r1
 bfc:	71 05       	cpc	r23, r1
 bfe:	08 95       	ret
 c00:	9b 01       	movw	r18, r22
 c02:	ac 01       	movw	r20, r24
 c04:	0a 2e       	mov	r0, r26
 c06:	06 94       	lsr	r0
 c08:	57 95       	ror	r21
 c0a:	47 95       	ror	r20
 c0c:	37 95       	ror	r19
 c0e:	27 95       	ror	r18
 c10:	ba 95       	dec	r27
 c12:	c9 f7       	brne	.-14     	; 0xc06 <__ultoa_invert+0xa2>
 c14:	62 0f       	add	r22, r18
 c16:	73 1f       	adc	r23, r19
 c18:	84 1f       	adc	r24, r20
 c1a:	95 1f       	adc	r25, r21
 c1c:	a0 1d       	adc	r26, r0
 c1e:	08 95       	ret

00000c20 <__prologue_saves__>:
 c20:	2f 92       	push	r2
 c22:	3f 92       	push	r3
 c24:	4f 92       	push	r4
 c26:	5f 92       	push	r5
 c28:	6f 92       	push	r6
 c2a:	7f 92       	push	r7
 c2c:	8f 92       	push	r8
 c2e:	9f 92       	push	r9
 c30:	af 92       	push	r10
 c32:	bf 92       	push	r11
 c34:	cf 92       	push	r12
 c36:	df 92       	push	r13
 c38:	ef 92       	push	r14
 c3a:	ff 92       	push	r15
 c3c:	0f 93       	push	r16
 c3e:	1f 93       	push	r17
 c40:	cf 93       	push	r28
 c42:	df 93       	push	r29
 c44:	cd b7       	in	r28, 0x3d	; 61
 c46:	de b7       	in	r29, 0x3e	; 62
 c48:	ca 1b       	sub	r28, r26
 c4a:	db 0b       	sbc	r29, r27
 c4c:	0f b6       	in	r0, 0x3f	; 63
 c4e:	f8 94       	cli
 c50:	de bf       	out	0x3e, r29	; 62
 c52:	0f be       	out	0x3f, r0	; 63
 c54:	cd bf       	out	0x3d, r28	; 61
 c56:	09 94       	ijmp

00000c58 <__epilogue_restores__>:
 c58:	2a 88       	ldd	r2, Y+18	; 0x12
 c5a:	39 88       	ldd	r3, Y+17	; 0x11
 c5c:	48 88       	ldd	r4, Y+16	; 0x10
 c5e:	5f 84       	ldd	r5, Y+15	; 0x0f
 c60:	6e 84       	ldd	r6, Y+14	; 0x0e
 c62:	7d 84       	ldd	r7, Y+13	; 0x0d
 c64:	8c 84       	ldd	r8, Y+12	; 0x0c
 c66:	9b 84       	ldd	r9, Y+11	; 0x0b
 c68:	aa 84       	ldd	r10, Y+10	; 0x0a
 c6a:	b9 84       	ldd	r11, Y+9	; 0x09
 c6c:	c8 84       	ldd	r12, Y+8	; 0x08
 c6e:	df 80       	ldd	r13, Y+7	; 0x07
 c70:	ee 80       	ldd	r14, Y+6	; 0x06
 c72:	fd 80       	ldd	r15, Y+5	; 0x05
 c74:	0c 81       	ldd	r16, Y+4	; 0x04
 c76:	1b 81       	ldd	r17, Y+3	; 0x03
 c78:	aa 81       	ldd	r26, Y+2	; 0x02
 c7a:	b9 81       	ldd	r27, Y+1	; 0x01
 c7c:	ce 0f       	add	r28, r30
 c7e:	d1 1d       	adc	r29, r1
 c80:	0f b6       	in	r0, 0x3f	; 63
 c82:	f8 94       	cli
 c84:	de bf       	out	0x3e, r29	; 62
 c86:	0f be       	out	0x3f, r0	; 63
 c88:	cd bf       	out	0x3d, r28	; 61
 c8a:	ed 01       	movw	r28, r26
 c8c:	08 95       	ret

00000c8e <_exit>:
 c8e:	f8 94       	cli

00000c90 <__stop_program>:
 c90:	ff cf       	rjmp	.-2      	; 0xc90 <__stop_program>
